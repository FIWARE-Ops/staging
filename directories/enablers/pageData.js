var types = [
        'API Management',
        'Core Context',
        'Data Monetization',
        'Data Publication',
        'IoT Agents',
        'Media Streams',
        'Processing',
        'Robotics',
        'Security',
        'Third Party',
        'Visualisation',
]; var domains = [
        'Big Data',
        'Cloud-Edge',
        'Context Broker',
        'Dashboard',
        'Data Connector',
        'Data Exchange',
        'Data Persistence',
        'Data Spaces',
        'Event Processing',
        'Identity Manager',
        'IoT Devices',
        'Media Server',
        'NGSI-LD',
        'NGSI-v2',
        'PDP',
        'PEP Proxy',
        'Short Term History',
        'Trust',
        'Verified Credentials',
        'Video Filters',
]; var technologies = [
        'AAS',
        'AMPQ',
        'Angular',
        'Apache Flink',
        'Apache Spark',
        'ArcGIS',
        'Blockchain',
        'Carto',
        'Cassandra',
        'CKAN',
        'CrateDB',
        'DDS',
        'DKAN',
        'eMail',
        'EPCIS',
        'Google Map',
        'Grafana',
        'HDFS',
        'HTTP',
        'IDS',
        'Kafka',
        'Keycloak',
        'Keyrock',
        'Keystone',
        'LoRa',
        'MongoDB',
        'MQTT',
        'MySQL',
        'Node.js',
        'OPC-UA',
        'OpenLayers',
        'PostgreSQL',
        'PySpark',
        'Python',
        'QGIS',
        'ROS2',
        'SDK',
        'SMS',
        'SOCRATA',
        'Timescale',
        'TMForum',
        'WebRTC',
        'XACML',
];

var modalData = [
    {
        name: 'Core Context Management',
        chapter: 'core',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'>",
        content:  "<div class='bullets'><p>This chapter contains:</p><ul><li class='bullet'>Context Brokers</li><li class='bullet'>Data Connectors</li></ul></div><p>A Context Broker component is the core and mandatory component of any “Powered by FIWARE” platform or solution. It enables to manage context information in a highly decentralised and large-scale manner. A wide variety of Data Connectors are also available.</p>"
    },
    {
        name: 'Interface with IoT, Robots and Third-Party Systems',
        chapter: 'interface',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_MediaStreams.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Robotics.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ThirdParty.svg'>",
        content:  "<div class='bullets'><p>This chapter offers:</p><ul><li class='bullet'>Maintainance of interoperable Sensors and Actuators</li><li class='bullet'>Linking Robotic goals and sensors as context data</li><li class='bullet'>Retrieving context data from Cameras</li><li class='bullet'>Pushing Context Data to event based systems</li></ul></div><p>A number of Generic Enablers are available making it easier to interface with the Internet of Things, Robots and Third-party systems for the purpose of gathering valuable context information or trigger actuations in response to context updates.</p>"
    },
     {
        name: 'Context Processing, Analysis and Visualisation',
        chapter: 'context-processing',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ProcessingAnalysis.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Visualization.svg'>",
        content:  "<div class='bullets'><p>This chapter contains:</p> <ul> <li class='bullet'>Decision making and Inference from Context</li><li class='bullet'>Graphs, Dashboards and Business Intellegence</li></ul></div><p>A number of Generic Enablers are available making it easier to process, analyze or visualize context information for the purpose of implementing the feedback loop expected in any “smart” application.</p>"
    },
    {
        name: 'Context Data/API Management, Publication and Monetization',
        chapter: 'context-data',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_APIManagement.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataMonetization.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataPublication.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'>",
        content: "<div class='bullets'><p>This chapter contains:</p><ul><li class='bullet'>Maintaining interoperable Sensors and Actuators</li><li class='bullet'>Linking Robotic goals and sensors as context data</li><li class='bullet'>Retrieving context data from Cameras</li><li class='bullet'>Pushing Context Data to event based systems</li></ul></div><p>Context data resources can be published in common data formats or a fee charged for access. You should secure access to services within a “Powered by FIWARE” architecture by using Security components.</p>"
    },
    {
        name: 'Deployment Tools',
        chapter: 'deployment-tools',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DeploymentTools.svg'/>",
        content: "<div class='bullets'><p>This chapter covers:</p> <ul><li class='bullet'>Deploying FIWARE Systems at scale</li><li class='bullet'>Container Images of FIWARE Components</li></ul></div><p>FIWARE components can be deployed using standard containerization techniques. Most components are directly available as Docker Images, links can be found within the GitHub repository of each generic enabler. For fully scalable production-ready instances please refer to the FIWARE <a href='https://github.com/FIWARE/helm-charts/' target='_blank' rel='noopener'>Helm Chart recipes</a>. A docker-compose file may also be available within individual GitHub repositories, but these should only be used in development environments.</p>"
    },
    {
        name: 'External Third-party Components',
        chapter: 'open-source',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_OpenSource_Other.svg'/>",
        content: "<p>FIWARE is fully committed to open source solutions, and can easily be integrated with other third-party components. A selection of external open source components commonly used and in alignment with existing <b>&quot;Powered by FIWARE&quot;</b> solutions has been added to the components list for your consideration.</p>"
    },
    { 
        name: "Orion", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-orion.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/fiware-orion.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/fiware-orion/latest.svg' alt='' /></p> <h4 id='whatisorion'>What is Orion?</h4> <p>The Orion Context Broker is an implementation of the Publish/Subscribe Context Broker GE, providing the NGSI interfaces. Using these interfaces, clients can do several operations:</p> <ul> <li>Register context producer applications, e.g. a temperature sensor within a room</li> <li>Update context information, e.g. send updates of temperature</li> <li>Being notified when changes on context information take place (e.g. the temperature has changed) or with a given frequency (e.g. get the temperature each minute)</li> <li>Query context information. The Orion Context Broker stores context information updated from applications, so queries are resolved based on that information.</li> </ul> <h4 id='whyuseorion'>Why Use Orion?</h4> <p>If you are developing a Data/Context scenario, a broker like the Orion Context Broker is a must. You would need a component in the architecture able to mediate between consumer producers (e.g. sensors) and the context consumer applications (e.g. an mobile phone applications taking advantage of the context information provided by the sensors). The Orion Context Broker fulfils this functionality in your architecture.</p> <p>Orion is an implementation of the FIWARE Publish/Subscribe Context Broker Generic Enabler. More specifically, Orion implements the following API and Open Specification:</p> <ul> <li><a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI-v2</a></li> </ul> <p>For context data management, NGSI and the Orion context broker have been accepted as standards or recommendations by a variety of independent standards bodies, for example, GSMA recommends NSGI as a standard for relevant parts of their <a href='https://www.gsma.com/iot/wp-content/uploads/2016/11/CLP.25-v1.0.pdf'>IoT Big Data architecture</a> and promotes the Orion Context Broker as the primary example of the standard and NGSI specification has been selected by the European Commission as a <a href='https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/Context+Broker'>CEF Building Block</a> for the implementation of new smart applications and Public Administration.</p>",  
        domain: "Context Broker,NGSI-v2",  
        technology: "HTTP",
        status: "Full",
        gitHub: "https://github.com/telefonicaid/fiware-orion/",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "https://hub.docker.com/r/telefonicaiot/fiware-orion",
        quay: "https://quay.io/repository/fiware/orion",
        documentation: "https://fiware-orion.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Orion-LD", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/context.Orion-LD.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE/context.Orion-LD.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE/context.Orion-LD/latest.svg' alt='' /></p> <h4 id='whatisorionld'>What is Orion-LD?</h4> <p>Orion-LD is an alternative NGSI-LD Context Broker written in C/C++. It is a standalone executable and therefore small, fast, lightweight and easy to handle. Context brokers allow for the management and requesting context of information in a structured manner based on linked data standards following the NGSI-LD specification. Orion-LD is more suitable for smaller installations or possibly in embedded environments - it currently supports only a subset of the standard NGSI-LD endpoints.</p> <h4 id='whyuseorionld'>Why Use Orion-LD?</h4> <p>Orion-LD implements the NGSI-LD linked data interface, which is the evolution of NGSI-v2 and previous versions going back to the OMA NGSI context interfaces. This standardized version is based on the NGSI-LD specification published by the ETSI Industry Specification Group on Context Information Management.</p> <p>NGSI-LD has a number of new features compared to NGSI-v2. NGSI-LD distinguishes properties and relationships instead of only having attributes. While properties have values, relationships explicitly refer to other entities. The result is an explicit entity graph, as specialized knowledge graph. Relationships can be followed to find relevant related entities. NGSI-LD is based on JSON-LD, where LD stands for linked data. As required in JSON-LD, NGSI-LD uses entity types, relationships and properties defined as unique URIs. The representation of the data is still concise as shortname strings can be used, the mapping to URIs is done in an <code>@context</code> element that can be part of the JSON or be referenced as a header. As JSON-LD is a serialization of RDF, NGSI-LD provides a semantic grounding and can be used with semantic tools and combined with other information.</p>",  
        domain: "Context Broker,NGSI-LD",  
        technology: "HTTP,MQTT",
        status: "Full",
        gitHub: "https://github.com/FIWARE/context.Orion-LD",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/orion-ld",
        documentation: "https://github.com/FIWARE/context.Orion-LD/tree/develop/doc/manuals-ld",
        status: "Full",
    },
    { 
        name: "Scorpio", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "NEC", 
        companyType: "Corporation", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/badge/license-BSD--4--clause-green' alt='License' /> <img src='https://img.shields.io/github/release-date/ScorpioBroker/ScorpioBroker.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ScorpioBroker/ScorpioBroker/latest.svg' alt='' /></p> <h4 id='whatisscorpio'>What is Scorpio?</h4> <p>Scorpio is an NGSI-LD Broker that allows managing and requesting context information. Context Producers can manage their context – creating, updating, appending and deleting context information. Context Consumers can request the context information they require, either identifying the entity or discover relevant entities by providing the entity type, possibly filtering according to property value, existing relationship and/or geographic scope provided as a GeoJSON feature.</p> <p>Two interaction styles are supported, a synchronous query-response, and an asynchronous subscribe / notify, where notifications can be based on a change in property or relationship, or on a fixed time interval. In addition to the regular context interface that provides the most current properties and relationships for each entity, Scorpio implements NGSI-LD’s optional temporal interface for requesting historic information, e.g. the property values measured within a specified time interval.</p> <p>Scorpio supports multiple deployment configurations including centralized, distributed and federated ones. In addition to the Context Producers mentioned above, there can be Context Sources that themselves implement the NGSI-LD interface. These Context Sources can register themselves with the information they can provide on request (not the information (values) itself).</p> <p>A Scorpio Broker in a distributed setting can then discover the Context Sources that may have information for answering a request based on their registrations, request and aggregate the information from different Context Sources and provide it to the requesting Context Consumer. In a federated setting the Context Source can itself be an NGSI-LD Broker. Federations can be used to combine information from multiple providers that want to (partially) share information. An important difference is then typically in the granularity of the registration, e.g. “I have information about entities of entity type building within a geographic area”, instead of “I have information about Building X”</p> <h4 id='whyusescorpio'>Why Use Scorpio?</h4> <p>Scorpio implements NGSI-LD, which is the evolution of NGSI-v2 and previous versions going back to the OMA NGSI context interfaces. This standardized version is based on the NGSI-LD specification published by the ETSI Industry Specification Group on Context Information Management.</p> <p>NGSI-LD has a number of new features compared to NGSI-v2. NGSI-LD distinguishes properties and relationships instead of only having attributes. While properties have values, relationships explicitly refer to other entities. The result is an explicit entity graph, as specialized knowledge graph. Relationships can be followed to find relevant related entities. NGSI-LD is based on JSON-LD, where LD stands for linked data. As required in JSON-LD, NGSI-LD uses entity types, relationships and properties defined as unique URIs. The representation of the data is still concise as shortname strings can be used, the mapping to URIs is done in an <code>@context</code> element that can be part of the JSON or be referenced as a header. As JSON-LD is a serialization of RDF, NGSI-LD provides a semantic grounding and can be used with semantic tools and combined with other information.</p> <p>Scorpio supports different deployment configurations, which support scalability and extension of scenarios in an evolutionary way. For example two separate deployments can be combined or for scalability reasons different brokers can be used – completely transparent to Context Consumers that can still use a single point of access. Scorpio also implements the optional temporal NGSI-LD interface, so any updated context information can automatically be made available as history information through the temporal interface.</p>",  
        domain: "Context Broker,NGSI-LD",  
        technology: "HTTP,MQTT",
        status: "Full",
        gitHub: "https://github.com/ScorpioBroker/ScorpioBroker",
        gitHubOrg: "https://github.com/ScorpioBroker",
        docker: "https://hub.docker.com/u/scorpiobroker/",
        quay: "https://quay.io/search?q&#x3D;scorpio",
        documentation: "https://scorpio.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Stellio", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "EGM", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/stellio-hub/stellio-context-broker.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/stellio-hub/stellio-context-broker.svg' alt='' /> <img src='https://img.shields.io/github/tag/stellio-hub/stellio-context-broker.svg' alt='' /></p> <h4 id='whatisstellio'>What is Stellio?</h4> <p>Stellio is a NGSI-LD context broker implementing the API specification published by the ETSI Industry Specification Group for Context Information Management (ISG CIM). Context information means any piece of data which is contextualized in time, space and in relation to other data through linked data principles.</p> <p>Stellio is built around a Kafka message broker for improved extensibility, scalability and decoupling of services. These services embed a graph database (Neo4J) for context management as well as a timeseries (TimescaleDB) and geospatial (PostGIS) database to manage temporal and geospatial properties.</p> <p>Stellio is developed in Kotlin and lays on the Spring Boot and Spring Cloud frameworks. It is based on a micro-services architecture and follows the reactive and functional paradigms.</p> <p>Stellio acts as a central broker. It currently supports major operations on context information, subscriptions and temporal queries and targets full compliance with the NGSI-LD specification by the end of 2020. It does not aim to support NGSIv1 and NGSIv2 specifications.</p> <h4 id='whyusestellio'>Why use Stellio?</h4> <p>In order to take the full benefit of the linked data nature of the NGSI-LD data model, Stellio uses the Neo4J labelled property graph database for the storage of the context information. Beside benefiting from Neo4J capabilities to efficiently handle graph data, this provides the underlying structure to perform syntactic and semantic validation of data, and opens up the door to exploit and analyze the graph with graph driven data science algorithms.</p> <p>In addition, Stellio includes the support of the NGSI-LD API for querying the temporal evolution of entities, as long as the interface for performing geospatial queries. The included TimescaleDB and PostGIS extensions of the well-known PostgreSQL database allow efficient queries while allowing off-the-shelves storing of large volumes of historical data.</p>",  
        domain: "Context Broker,NGSI-LD",  
        technology: "HTTP,MQTT,Keycloak",
        status: "Full",
        gitHub: "https://github.com/stellio-hub/stellio-context-broker",
        gitHubOrg: "https://github.com/stellio-hub",
        docker: "https://hub.docker.com/u/stellio",
        quay: "https://quay.io/search?q&#x3D;stellio-",
        documentation: "https://stellio.rtfd.io/",
        status: "Full",
    },
    { 
        name: "NGSI-JS", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/ficodes/ngsijs.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ficodes/ngsijs.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ficodes/ngsijs/latest.svg' alt='' /></p> <h4 id='whatisngsijs'>What is NGSI.js?</h4> <p>NGSI.js is the JavaScript library used by WireCloud for adding FIWARE NGSI capabilities to widgets and operators. However, this library has also been designed to be used in other environments as normal web pages and clients/servers running on Node.js.</p> <p>This library has been developed following the FIWARE NGSI v1, NGSI v2 and the NGSI-LD specifications and has been tested to work against multiple Context Brokers.</p> <h4 id='whyusengsijs'>Why Use NGSI.js?</h4> <p>NGSI.js provides a series of boilerplate library functions allowing developers to connect and push context data to any NGSI compliant context broker, the removes the need to write custom JavaScript code and speeds up development time.</p>",  
        domain: "Data Connector",  
        technology: "Node.js,SDK",
        status: "Full",
        gitHub: "https://github.com/Ficodes/ngsijs",
        gitHubOrg: "https://github.com/Ficodes",
        docker: "",
        quay: "https://quay.io/repository/fiware/ngsiproxy",
        documentation: "http://conwetlab.github.io/ngsijs/stable/NGSI.html",
        status: "Full",
    },
    { 
        name: "Draco", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "UPM", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/ging/fiware-draco.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-draco.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-draco/latest.svg' alt='' /></p> <h4 id='whatisdraco'>What is Draco?</h4> <p>Draco is a connector in charge of persisting context data sources into other third-party databases and storage systems, creating a historical view of the context. Internally, Draco is based on Apache NiFi. <a href='https://nifi.apache.org'>NiFi</a> is a popular framework for data management and processing from multiple sources.</p> <p>Draco plays the role of a connector between the Orion Context Broker (which is an <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> source of data) source of data) and a wide range of external systems such as MySQL, MongoDB etc. You can use Draco if you need to process and persist context data so that you can keep a historical record. Draco can also be used to filter and repost context data back into Orion.</p> <h4 id='whyusedraco'>Why Use Draco?</h4> <p>Persisting historical context data is useful for big data analysis - it can be used to discover trends, or data can be sampled and aggregated to remove the influence of outlying data measurements. However within each Smart Solution, the significance of each entity type will differ and entities and attributes may need to be sampled at different rates.</p> <p>Since the business requirements for using context data differ from application to application, no single standard use case for historical data persistence exists. Therefore rather than overloading the context broker with the job of historical context data persistence, this role has been separated out into another enabler. Amongst the advantages of the component, Draco offers a flexible graphical interface so it is possible to amend your data flows according to your current business needs.</p>",  
        domain: "Data Connector,Data Persistence",  
        technology: "MongoDB,MySQL,PostgreSQL,CKAN,Carto,Cassandra,HDFS",
        status: "Full",
        gitHub: "https://github.com/ging/fiware-draco",
        gitHubOrg: "https://github.com/ging",
        docker: "",
        quay: "https://quay.io/repository/fiware/draco",
        documentation: "https://fiware-draco.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Cosmos Flink", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "UPM", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/ging/fiware-cosmos-orion-flink-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-cosmos-orion-flink-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-cosmos-orion-flink-connector/latest.svg' alt='' /></p> <h4 id='whatiscosmosflink'>What is Cosmos Flink?</h4> <p>The Cosmos Big Data Analysis GE is a set of tools that help achieving the tasks of Streaming and Batch processing over context data. These tools are:</p> <h5 id='flink'>Flink</h5> <ul> <li><a href='https://github.com/ging/fiware-cosmos-orion-flink-connector'>Orion-Flink Connector</a></li> <li><a href='https://flink.apache.org/'>Apache Flink Processing Engine</a></li> </ul> <h4 id='whyusecosmos'>Why use Cosmos?</h4> <p>As the state of the real world changes, the entities representing your IoT devices are constantly changing. Big data analysis allows for the study of datasets coming from your context data which are too large for traditional data-processing software. You can apply predictive analysis or user behaviour analytics to extract meaningful conclusions as to the state of your smart solution and bring value to your solution.</p>",  
        domain: "Big Data",  
        technology: "Apache Flink",
        status: "Full",
        gitHub: "https://github.com/ging/fiware-cosmos-orion-flink-connector/",
        gitHubOrg: "https://github.com/ging/",
        docker: "",
        quay: "",
        documentation: "https://fiware-cosmos-flink.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "Cosmos Spark", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "UPM", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/ging/fiware-cosmos-orion-spark-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-cosmos-orion-spark-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-cosmos-orion-flink-connector/latest.svg' alt='' /></p> <h4 id='whatiscosmosspark'>What is Cosmos Spark?</h4> <p>The Cosmos Big Data Analysis GE is a set of tools that help achieving the tasks of Streaming and Batch processing over context data. These tools are:</p> <ul> <li><a href='https://github.com/ging/fiware-cosmos-orion-spark-connector'>Orion-Spark Connector</a></li> <li><a href='https://spark.apache.org/'>Apache Spark Processing Engine</a></li> </ul> <h4 id='whyusecosmos'>Why use Cosmos?</h4> <p>As the state of the real world changes, the entities representing your IoT devices are constantly changing. Big data analysis allows for the study of datasets coming from your context data which are too large for traditional data-processing software. You can apply predictive analysis or user behaviour analytics to extract meaningful conclusions as to the state of your smart solution and bring value to your solution.</p>",  
        domain: "Big Data",  
        technology: "Apache Spark",
        status: "Full",
        gitHub: "https://github.com/ging/fiware-cosmos-orion-spark-connector",
        gitHubOrg: "https://github.com/ging/",
        docker: "",
        quay: "",
        documentation: "https://fiware-cosmos-spark.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "QuantumLeap", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Martel Innovate", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/orchestracities/ngsi-timeseries-api.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/orchestracities/ngsi-timeseries-api.svg' alt='' /> <img src='https://img.shields.io/github/last-commit/orchestracities/ngsi-timeseries-api.svg' alt='' /></p> <h4 id='whatisquantumleap'>What is QuantumLeap?</h4> <p>The QuantumLeap Generic Enabler focuses on persisting historical context data into <a href='https://en.wikipedia.org/wiki/Time_series_database'>time-series databases</a> such as <a href='https://crate.io/'>CrateDB</a> with reference to maintaining a scalable architecture and compatibility with visualization tools such as <a href='http://www.grafana.com/'>Grafana</a></p> <h4 id='whyusequantumleap'>Why use QuantumLeap?</h4> <p>The appropriate use of time series data analysis will depend on your use case and the reliability of the data measurements you receive. Time series data analysis can be used to answer questions such as:</p> <ul> <li>What was the maximum measurement of a device within a given time period?</li> <li>What was the average measurement of a device within a given time period?</li> <li>What was the sum of the measurements sent by a device within a given time period?</li> </ul> <p>QuantumLeap offers great flexibility in measuring and monitoring time-series data and leverages existing time-series-based databases to be able to support complex queries such as cross-entity queries (e.g. an average of averages)</p>",  
        domain: "Data Connector,Short Term History",  
        technology: "CrateDB,Timescale,Grafana",
        status: "Full",
        gitHub: "https://github.com/smartsdk/ngsi-timeseries-api",
        gitHubOrg: "https://github.com/smartsdk",
        docker: "",
        quay: "https://quay.io/repository/fiware/quantumleap",
        documentation: "https://quantumleap.rtfd.io/",
        status: "Full",
    },
    { 
        name: "PySpark Connector", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/fiware-orion-pyspark-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/fiware-orion-pyspark-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/fiware-orion-pyspark-connector/latest.svg' alt='' /></p> <h4 id='whatisthepysparkconnector'>What is the PySpark Connector?</h4> <p>The PySpark Connector is a FIWARE Generic Enabler (GE) made of a receiver and a replier subcomponents allowing a bidirectional communication between the NGSI-v2 and NGSI-LD Context Brokers and PySpark. The component works on a low-level socket communication implementing a message passing interface between the two aforementioned counterparts. This interface is equipped with a parser function, permitting the creation of both NGSI-v2 and NGSI-LD entities ready to use in a custom PySpark algorithm. Once data are preprocessed inside the PySpark evnironment, the component also provide a write-back interface (via REST API) to the context broker</p> <h4 id='whyusethepysparkconnector'>Why use the PySpark Connector?</h4> <p>The PySpark Connector was created with the idea of expanding the use of compliant context brokers to merge with the Python environment. Python is currently one of the most used programming languages for data analysis, providing lots of scientific libraries for data processing and visualization. This connector is able to open a communication path between these two instruments and to combine the advantages they provide at a minimal development cost.</p>",  
        domain: "Big Data",  
        technology: "PySpark",
        status: "Incubating",
        gitHub: "https://github.com/Engineering-Research-and-Development/fiware-orion-pyspark-connector",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://hub.docker.com/r/rdlabengpa/fiware-orion-pyspark-connector",
        quay: "https://quay.io/repository/fiware/pyspark-connector",
        documentation: "https://fiware-orion-pyspark-connector.readthedocs.io/",
        status: "Incubating",
    },
    { 
        name: "Canis Major", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/CanisMajor.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/CanisMajor.svg' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/CanisMajor.svg' alt='' /></p> <h4 id='whatiscanismajor'>What is Canis Major?</h4> <p>Canis Major is a blockchain adaptor that supports various DLT, the adaptor aims to submit the data to DLT in Powered By FIWARE Architecture. The adaptor will not be recommended to work for public-permissionless blockchains (especially tokens, cryptocurrencies).</p> <p>Canis Major is developed using NodeJS and supports the transaction to IOTA or ethereum clients such as hyplerledger besu, quorum either using own smart contract or using <a href='https://github.com/FIWARE-Blockchain/AEIContract'>AEI Contract</a> which is based on ERC721 Non-fungible tokens (recommended).</p> <h4 id='whyusecanismajor'>Why use Canis Major?</h4> <p>For some elements of context, it is important to maintain a log of transactions that is verifiable and unchangeable. The use of distributed ledgers helps with this and provides a mechanism for persisting context events. Canis Major can act as a pluggable micro-service that will create, sign and submit the transactions and also keeps the logs of transaction receipts which can be queried using restful APIs.</p> <p>Canis Major aims to make the integration of DLT's easier in 'Powered By FIWARE' architectures.</p>",  
        domain: "Data Persistence",  
        technology: "Blockchain",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/CanisMajor",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/canis-major",
        documentation: "https://fiware.github.io/CanisMajor/",
        status: "Incubating",
    },
    { 
        name: "Apollo", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/apollo.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE/apollo.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE/apollo/latest.svg' alt='' /></p> <h4 id='whatisfiwareapollo'>What is FIWARE Apollo?</h4> <p>In order to allow an NGSI-LD broker to receive data sent through subscriptions by another broker, Apollo translates notifications  into entity creation or update requests at the NGSI-LD API. For every entity received in the data-part of a notification, the proxy  first tries a POST <code>/entities/{entityId}/attrs/</code> to update(and overwrite the properties) the entity. If <strong>404 - NOT FOUND</strong> is returned  by the broker, the proxy will try to create the entity via POST <code>/entities</code>.</p> <h4 id='whyusethefiwareapollo'>Why use the FIWARE Apollo?</h4> <p>Within data spaces it may be necessary to duplicate entity information across multiple brokers. For example, a receiving broker may use the raw data provided via a subscription, process it to add value and then offer additional insights on that data. By  using a <em>subscribe-and-duplicate</em> mechanism, the data is automatically generated within a protected context broker and  it is possible to permit access via a known protected data entrypoint which then adds data to a context broker.</p>",  
        domain: "Data Persistence",  
        technology: "HTTP",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/apollo",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/apollo",
        documentation: "https://github.com/FIWARE/apollo#readme",
        status: "Incubating",
    },
    { 
        name: "O2K Connector", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/o2k-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/o2k-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/o2k-connector/latest.svg' alt='' /></p> <h4 id='whatistheo2kconnector'>What is the O2K-Connector?</h4> <p>O2K-Connector is a lightweight connector, written in Python, that enables context data sharing from Orion Context Broker  towards Apache Kafka, supporting both NGSI-V2 and NGSI-LD interfaces. The connector supports both HTTP and MQTT protocols  communication to be easily integrated in the most common industrial scenarios.</p> <h4 id='whyusetheo2kconnector'>Why use the O2K-Connector?</h4> <p>Using O2K-Connector offers several benefits. Firstly, it simplifies the integration process between FIWARE and Apache  technologies by providing an  efficient solution for data forwarding, eliminating the need for complex and time-consuming  custom integration efforts. Secondly, O2K-Connector ensures reliable and scalable data transfer, allowing for real-time  processing and analysis of data in Apache Kafka by supporting the faster and lighter MQTT  Orion subscription.</p>",  
        domain: "Data Connector",  
        technology: "Kafka",
        status: "Incubating",
        gitHub: "https://github.com/Engineering-Research-and-Development/o2k-connector",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://registry.hub.docker.com/r/rdlabengpa/o2k-connector",
        quay: "https://quay.io/repository/fiware/o2k-connector",
        documentation: "https://github.com/Engineering-Research-and-Development/o2k-connector#readme",
        status: "Incubating",
    },
    { 
        name: "FiLiP", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "RWTH Aachen University", 
        companyType: "", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/RWTH-EBC/FiLiP.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/RWTH-EBC/FiLiP.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/RWTH-EBC/FiLiP/latest.svg' alt='' /></p> <h4 id='whatisfilip'>What is FiLip?</h4> <p>FiLiP (Fiware Library for Python) is a python software development kit (SDK) for accelerating the development of web services that use Fiware's Generic Enablers (GEs) as backend.</p> <p>It is mainly based on the Pydantic package which is a sophisticated library for data validation and settings management using python type annotations. Pydantic enforces type hints at runtime, and provides user friendly errors when data is invalid. We mainly use the Pydantic model to build our own data model structure required for efficient data model parsing and validation and interaction with FIWARE services' RestAPIs.</p> <p>For API interaction, FiLiP relies on the well-known requests package. It is important to understand that we do not in any way restrict any features of requests.</p> <p>Furthermore, FiLiP is designed to help with the fast development of FIWARE-based applications and avoid hundreds of lines of boilerplate, but it cannot substitute learning the basic concepts behind the used FIWARE components.</p> <p>Currently, FiLiP supports APIs from Orion, LD-Brokers, IoT-Agents and Quantumleap. </p> <h4 id='whyusefilip'>Why use FiLip?</h4> <p>The motivation for creating  a client library rather than relying on an auto-generated from the Open API spec is as follows:</p> <ul> <li>Auto-generated code tends to become rather bulky and its quality strongly depends on the provided input data.</li> <li>Manipulating generated code can result in a big hassle for maintenance if additional features need to be integrated.</li> <li>The underlying NGSI (Next Generation Service Interface) for FIWARE is a rather generic specification. Hence, generated models may also be   of generic types as lists and dicts in Python. So there is no real benefit. Furthermore, there is no chance for reasonable validation and error handling.'</li> </ul>",  
        domain: "Data Connector",  
        technology: "Python,SDK",
        status: "Incubating",
        gitHub: "https://github.com/RWTH-EBC/FiLiP",
        gitHubOrg: "https://github.com/RWTH-EBC",
        docker: "",
        quay: "",
        documentation: "https://rwth-ebc.github.io/FiLiP/master/docs/index.html",
        status: "Incubating",
    },
    { 
        name: "Entirety", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "RWTH Aachen University", 
        companyType: "´", 
        type: "Core Context", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/01/svg/core.svg'/>",
        chapter: "core", 
        content: "<p><img src='https://img.shields.io/github/license/RWTH-EBC/FiLiP.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/RWTH-EBC/FiLiP.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/RWTH-EBC/FiLiP/latest.svg' alt='' /></p> <h4 id='whatisfilip'>What is FiLip?</h4> <p>FiLiP (Fiware Library for Python) is a python software development kit (SDK) for accelerating the development of web services that use Fiware's Generic Enablers (GEs) as backend.</p> <p>It is mainly based on the Pydantic package which is a sophisticated library for data validation and settings management using python type annotations. Pydantic enforces type hints at runtime, and provides user friendly errors when data is invalid. We mainly use the Pydantic model to build our own data model structure required for efficient data model parsing and validation and interaction with FIWARE services' RestAPIs.</p> <p>For API interaction, FiLiP relies on the well-known requests package. It is important to understand that we do not in any way restrict any features of requests.</p> <p>Furthermore, FiLiP is designed to help with the fast development of FIWARE-based applications and avoid hundreds of lines of boilerplate, but it cannot substitute learning the basic concepts behind the used FIWARE components.</p> <p>Currently, FiLiP supports APIs from Orion, LD-Brokers, IoT-Agents and Quantumleap. </p> <h4 id='whyusefilip'>Why use FiLip?</h4> <p>The motivation for creating  a client library rather than relying on an auto-generated from the Open API spec is as follows:</p> <ul> <li>Auto-generated code tends to become rather bulky and its quality strongly depends on the provided input data.</li> <li>Manipulating generated code can result in a big hassle for maintenance if additional features need to be integrated.</li> <li>The underlying NGSI (Next Generation Service Interface) for FIWARE is a rather generic specification. Hence, generated models may also be   of generic types as lists and dicts in Python. So there is no real benefit. Furthermore, there is no chance for reasonable validation and error handling.</li> </ul>",  
        domain: "Data Connector",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/N5GEH/n5geh.tools.entirety
",
        gitHubOrg: "https://github.com/N5GEH",
        docker: "ghcr.io/n5geh/n5geh.tools.entirety",
        quay: "",
        documentation: "https://github.com/N5GEH/n5geh.tools.entirety#readme",
        status: "Incubating",
    },
    { 
        name: "IoT Agent for JSON", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "IoT Agents", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/iot-agents.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/iotagent-json.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/iotagent-json.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/iotagent-json/latest.svg' alt='' /></p> <p>An IoT Agent for a JSON based protocol (with <a href='https://www.amqp.org/'>AMQP</a>, <a href='https://www.w3.org/Protocols/'>HTTP</a> and <a href='https://mqtt.org/'>MQTT</a> transports)</p> <p>This IoT Agent is designed to be a bridge between <a href='https://json.org/'>JSON</a> and the <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface. It follows the standard interaction model defined in the <a href='https://iotagent-node-lib.rtfd.io'>IoT Agent Framework Library</a>.</p> <h4 id='whatareiotagents'>What are IoT Agents?</h4> <p>The IoT Agent (IDAS) component is an implementation of the Backend Device Management GE, according to the FIWARE reference architecture. You are here because you need to connect objects to gather data or interact with them, typical IoT use case scenario . If so, you need to use one of the existing IoT Agents that are part of IDAS.</p> <p>You need this component if you plan to connect IoT devices/gateways to FIWARE-based ecosystems. IoT Agents translate IoT-specific protocols into the NGSI context information protocol, that is the FIWARE standard data exchange model. You do not need this component if your devices or gateways natively support the NGSI API.</p> <p>FIWARE-Ready IoT devices are able demonstrate the ability of the IoT solutions to seamless interoperate with FIWARE platforms. Any IoT device which is able to connect to the context broker (either directly or via an IoT Agent) is able to undergo a certification and testing process and can be added to the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a> and labelled as a <a href='http://marketplace.fiware.org/pages/how-to-devices'>FIWARE-Ready IoT Device</a>.</p> <h4 id='whyuseiotagents'>Why Use IoT Agents?</h4> <p>By using an IoT Agent , your devices will be represented in a FIWARE platform as NGSI entities in a Context Broker. This means that you can query or subscribe to changes of device parameters status by querying or subscribing to the corresponding NGSI entity attributes at the ContextBroker.</p> <p>Additionally, you will be able trigger commands to your actuation devices by updating specific command-related attributes in the associated NGSI entities representation at the Context Broker. This way, all hardware interactions with IoT devices can be handled by the Context Broker, using a homogeneous <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface.</p> <p><img src='https://img.shields.io/github/release-date/telefonicaid/iotagent-json.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/iotagent-json/latest.svg' alt='' /></p> <p>IoT Agent for a JSON based protocol (with <a href='https://www.amqp.org/'>AMQP</a>, <a href='https://www.w3.org/Protocols/'>HTTP</a> and <a href='https://mqtt.org/'>MQTT</a> transports)</p> <h3 id='whatareiotagents-1'>What are IoT Agents?</h3> <p>The IoT Agent (IDAS) component is an implementation of the Backend Device Management GE, according to the FIWARE reference architecture. You are here because you need to connect objects to gather data or interact with them, typical IoT use case scenario . If so, you need to use one of the existing IoT Agents that are part of IDAS.</p> <p>You need this component if you plan to connect IoT devices/gateways to FIWARE-based ecosystems. IoT Agents translate IoT-specific protocols into the NGSI context information protocol, that is the FIWARE standard data exchange model. You do not need this component if your devices or gateways natively support the NGSI API.</p> <p>FIWARE-Ready IoT devices are able demonstrate the ability of the IoT solutions to seamless interoperate with FIWARE platforms. Any IoT device which is able to connect to the context broker (either directly or via an IoT Agent) is able to undergo a certification and testing process and can be added to the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a> and labelled as a <a href='http://marketplace.fiware.org/pages/how-to-devices'>FIWARE-Ready IoT Device</a>.</p> <h3 id='whyuseiotagents-1'>Why Use IoT Agents?</h3> <p>By using an IoT Agent , your devices will be represented in a FIWARE platform as NGSI entities in a Context Broker. This means that you can query or subscribe to changes of device parameters status by querying or subscribing to the corresponding NGSI entity attributes at the ContextBroker.</p> <p>Additionally, you will be able trigger commands to your actuation devices by updating specific command-related attributes in the associated NGSI entities representation at the Context Broker. This way, all hardware interactions with IoT devices can be handled by the Context Broker, using a homogeneous <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface.</p>",  
        domain: "IoT Devices",  
        technology: "HTTP,AMPQ,MQTT",
        status: "Full",
        gitHub: "https://github.com/telefonicaid/iotagent-json",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "https://hub.docker.com/r/telefonicaiot/iotagent-json/",
        quay: "https://quay.io/repository/fiware/iotagent-json",
        documentation: "https://fiware-iotagent-json.rtfd.io/",
        status: "Full",
    },
    { 
        name: "IoT Agent for LoRaWAN", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "ATOS", 
        companyType: "", 
        type: "IoT Agents", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/iot-agents.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/Atos-Research-and-Innovation/IoTagent-LoRaWAN.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Atos-Research-and-Innovation/IoTagent-LoRaWAN.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Atos-Research-and-Innovation/IoTagent-LoRaWAN/latest.svg' alt='' /></p> <p>IoT Agent for the LoRaWAN protocol (with CayenneLpp and CBOR data models)</p> <p>This IoT Agent is designed to be a bridge between the <a href='https://lora-alliance.org/about-lorawan'>LoRaWAN</a> protocol and the <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface. It follows the standard interaction model defined in the <a href='https://iotagent-node-lib.rtfd.io'>IoT Agent Framework Library</a>.</p> <h4 id='whatareiotagents'>What are IoT Agents?</h4> <p>The IoT Agent (IDAS) component is an implementation of the Backend Device Management GE, according to the FIWARE reference architecture. You are here because you need to connect objects to gather data or interact with them, typical IoT use case scenario . If so, you need to use one of the existing IoT Agents that are part of IDAS.</p> <p>You need this component if you plan to connect IoT devices/gateways to FIWARE-based ecosystems. IoT Agents translate IoT-specific protocols into the NGSI context information protocol, that is the FIWARE standard data exchange model. You do not need this component if your devices or gateways natively support the NGSI API.</p> <p>FIWARE-Ready IoT devices are able demonstrate the ability of the IoT solutions to seamless interoperate with FIWARE platforms. Any IoT device which is able to connect to the context broker (either directly or via an IoT Agent) is able to undergo a certification and testing process and can be added to the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a> and labelled as a <a href='http://marketplace.fiware.org/pages/how-to-devices'>FIWARE-Ready IoT Device</a>.</p> <h4 id='whyuseiotagents'>Why Use IoT Agents?</h4> <p>By using an IoT Agent , your devices will be represented in a FIWARE platform as NGSI entities in a Context Broker. This means that you can query or subscribe to changes of device parameters status by querying or subscribing to the corresponding NGSI entity attributes at the ContextBroker.</p> <p>Additionally, you will be able trigger commands to your actuation devices by updating specific command-related attributes in the associated NGSI entities representation at the Context Broker. This way, all hardware interactions with IoT devices can be handled by the Context Broker, using a homogeneous <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface.</p>",  
        domain: "IoT Devices",  
        technology: "LoRa",
        status: "Full",
        gitHub: "https://github.com/Atos-Research-and-Innovation/IoTagent-LoRaWAN",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "",
        quay: "https://quay.io/repository/fiware/iotagent-lorawan",
        documentation: "https://fiware-lorawan.rtfd.io/",
        status: "Full",
    },
    { 
        name: "IoT Agent library", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "IoT Agents", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/iot-agents.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/iotagent-node-lib.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/iotagent-node-lib.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/iotagent-node-lib/latest.svg' alt='' /></p> <p>A Library for developing your own IoT Agent.</p> <h4 id='whatareiotagents'>What are IoT Agents?</h4> <p>The IoT Agent (IDAS) component is an implementation of the Backend Device Management GE, according to the FIWARE reference architecture. You are here because you need to connect objects to gather data or interact with them, typical IoT use case scenario . If so, you need to use one of the existing IoT Agents that are part of IDAS.</p> <p>You need this component if you plan to connect IoT devices/gateways to FIWARE-based ecosystems. IoT Agents translate IoT-specific protocols into the NGSI context information protocol, that is the FIWARE standard data exchange model. You do not need this component if your devices or gateways natively support the NGSI API.</p> <p>FIWARE-Ready IoT devices are able demonstrate the ability of the IoT solutions to seamless interoperate with FIWARE platforms. Any IoT device which is able to connect to the context broker (either directly or via an IoT Agent) is able to undergo a certification and testing process and can be added to the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a> and labelled as a <a href='http://marketplace.fiware.org/pages/how-to-devices'>FIWARE-Ready IoT Device</a>.</p> <h4 id='whyuseiotagents'>Why Use IoT Agents?</h4> <p>By using an IoT Agent , your devices will be represented in a FIWARE platform as NGSI entities in a Context Broker. This means that you can query or subscribe to changes of device parameters status by querying or subscribing to the corresponding NGSI entity attributes at the ContextBroker.</p> <p>Additionally, you will be able trigger commands to your actuation devices by updating specific command-related attributes in the associated NGSI entities representation at the Context Broker. This way, all hardware interactions with IoT devices can be handled by the Context Broker, using a homogeneous <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface.</p>",  
        domain: "IoT Devices",  
        technology: "Node.js,SDK",
        status: "Full",
        gitHub: "https://github.com/telefonicaid/iotagent-node-lib",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "",
        quay: "",
        documentation: "https://iotagent-node-lib.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Kurento", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Naevatec", 
        companyType: "", 
        type: "Media Streams", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/media-streams.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/Kurento/kurento-media-server.svg' alt='License' /> <img src='https://img.shields.io/badge/tag-6.9.0-blue.svg' alt='' /></p> <h4 id='whatiskurento'>What is Kurento?</h4> <p>The Stream Oriented GE is a development framework that provides an abstraction layer for multimedia capabilities, allowing non-expert developers to include interactive media components to their applications. The Open API is at the heart of this enabler - A REST-like API, based on JSON RPC 2.0, exposing a toolbox of Media Elements that can be chained to create complex media processing pipelines. The Stream Oriented GE provides several client implementations of the Open API. The Java client allows developers to include media capabilities to Java or JEE applications. A JavaScript client is also ready to be used with Node.js or directly in browser applications. Thanks to these, the Stream Oriented GE provides developers with a set of robust end-to-end interoperable multimedia communication capabilities to deal with the complexity of transport, encoding/decoding, processing and rendering tasks in an easy and efficient way.</p> <h4 id='whyusekurento'>Why use Kurento?</h4> <p>The development of interactive multimedia applications is a complex task, which usually requires specific expertise and huge investments. Stream Oriented GE brings a number of abstractions and enablers democratizing multimedia technologies and making possible to any WWW developer to create powerful applications involving advanced features such as: interoperable audiovisual communications, computer vision, augmented reality, flexible media playing, recording, etc. The Stream Oriented GE will be particularly useful and intuitive for developers familiar with Java EE and JavaScript technologies, although its capabilities are also exposed through agnostic interoperable network interfaces that can be consumed from any other language of system. In summary, it makes possible the development of complex interactive multimedia communications in a fast, simple and easy way.</p>",  
        domain: "Media Server",  
        technology: "WebRTC",
        status: "Full",
        gitHub: "https://github.com/Kurento/kurento-media-server.",
        gitHubOrg: "https://github.com/Kurento",
        docker: "https://hub.docker.com/r/kurento/kurento-media-server",
        quay: "",
        documentation: "https://kurento.rtfd.io/",
        status: "Full",
    },
    { 
        name: "OpenVidu", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Naevatec", 
        companyType: "", 
        type: "Media Streams", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/media-streams.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/OpenVidu/openvidu.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/OpenVidu/openvidu.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/OpenVidu/openvidu/latest.svg' alt='' /></p> <h4 id='whatisopenvidu'>What is OpenVidu?</h4> <p>The Openvidu Generic Enabler simplifies real-time processing of media streams managed or provided by Kurento, providing a simple HTTP REST API that manages the streams and provides an extra security layer simplifying the transformation of video cameras into sensors as well as the incorporation of advanced application functions (integrated audiovisual communications, augmented reality, flexible media playing and recording, etc</p> <h4 id='whyuseopenvidu'>Why Use OpenVidu?</h4> <p>Openvidu is a simple (easy to deploy/ easy to use) way to have advanced media streams processing and communications. It is opensource, compatible with multiple frontend and backend technologies. It provides support for many media transmission protocols. It hides the specifics and allows you to focus in your use case and business logic.</p>",  
        domain: "Video Filters",  
        technology: "WebRTC",
        status: "Full",
        gitHub: "https://github.com/OpenVidu/openvidu",
        gitHubOrg: "https://github.com/OpenVidu/",
        docker: "https://hub.docker.com/r/openvidu/openvidu-server-kms",
        quay: "",
        documentation: "https://docs.openvidu.io/",
        status: "Full",
    },
    { 
        name: "Fast DDS", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "eProsima", 
        companyType: "", 
        type: "Robotics", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/robotics.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/eProsima/Fast-RTPS.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/eProsima/Fast-RTPS.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/eProsima/Fast-RTPS/latest.svg' alt='' /></p> <p>eProsima Fast DDS is a C++ implementation of the RTPS (Real Time Publish Subscribe) protocol, which provides publisher-subscriber communications over unreliable transports such as UDP, as defined and maintained by the Object Management Group (OMG) consortium. Fast DDS provides both the <a href='https://www.omg.org/spec/DDS/1.4'>OMG DDS 1.4</a> and the <a href='https://www.omg.org/spec/DDSI-RTPS/2.2/'>OMG RTPS 2.2</a> interoperable wire-protocol standards.</p> <p>eProsima Fast DDS holds the benefit of being standalone and up-to-date, as most vendor solutions either implement RTPS as a tool to implement DDS or use past versions of the specification.</p>",  
        domain: "IoT Devices",  
        technology: "ROS2",
        status: "Incubating",
        gitHub: "https://github.com/eProsima/Fast-DDS",
        gitHubOrg: "https://github.com/eProsima",
        docker: "",
        quay: "",
        documentation: "https://eprosima-fast-rtps.rtfd.io/",
        status: "Incubating",
    },
    { 
        name: "Micro XRCE-DDS", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "eProsima", 
        companyType: "", 
        type: "Robotics", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/robotics.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/eProsima/Micro-XRCE-DDS.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/eProsima/Micro-XRCE-DDS.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/eProsima/Micro-XRCE-DDS/latest.svg' alt='' /></p> <h3 id='whatismicroxrcedds'>What is Micro XRCE-DDS?</h3> <p>eProsima Micro XRCE-DDS is an IoT-oriented middleware based on a publish-subscribe messaging pattern.</p> <p>Micro XRCE-DDS follows a client-server architecture where low resource devices (Micro XRCE-DDS Clients) are connected to a server (Micro XRCE-DDS Agent).</p> <p>On the one hand, Micro XRCE-DDS Client (C library) is focused on addressing the challenges of resource-constrained environments such as a microcontroller. For this reason, this library is designed to offer a completely dynamic-memory free implementation and really low memory usage (~2.5 KB of stack usage for a simple publisher-subscribe application).</p> <p>On the other hand, Micro XRCE-DDS Agent (C++ application) is a self-contained application which is in charge of providing a presence to the Clients in the DDS (Data Distribution Service) global data space.</p> <p>This multi-platform application (Linux and Windows) offers to Clients high-performance access to DDS space thanks to the Fast RTPS framework. Micro XRCE-DDS is a standalone C/C++ implementation of the OMG (Object Management Group) DDS-XRCE (DDS for eXtremely Resource Constrained Environments Specification).</p> <h3 id='whyusemicroxrcedds'>Why use Micro XRCE-DDS?</h3> <p>In contrast to other IoT-oriented middleware such as MQTT or CoAP which follow centralized-data approach over a single transport protocol, Micro XRCE-DDS offers a decentralized-data approach over multiple transport protocols such as UPD, TCP or Serial. Furthermore, Micro XRCE-DDS is designed to offer a really low memory footprint, which makes this product particularly appealing for IoT communication in resource-constrained devices.</p>",  
        domain: "IoT Devices",  
        technology: "DDS",
        status: "Incubating",
        gitHub: "https://github.com/eProsima/Micro-XRCE-DDS",
        gitHubOrg: "https://github.com/eProsima",
        docker: "",
        quay: "",
        documentation: "https://micro-xrce-dds.rtfd.io/",
        status: "Incubating",
    },
    { 
        name: "IoT Agent for OPC-UA", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Robotics", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/robotics.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/iotagent-opcua.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/iotagent-opcua.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/iotagent-opcua/latest.svg' alt='' /></p> <p>IoT Agent accepting data from OPC UA devices.</p> <p>This IoT Agent is designed to be a bridge between the <a href='http://www.opcua.us/'>OPC Unified Architecture</a> protocol and the <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface. It follows the standard interaction model defined in the <a href='https://iotagent-node-lib.rtfd.io'>IoT Agent Framework Library</a>.</p> <h4 id='whatareiotagents'>What are IoT Agents?</h4> <p>The IoT Agent (IDAS) component is an implementation of the Backend Device Management GE, according to the FIWARE reference architecture. You are here because you need to connect objects to gather data or interact with them, typical IoT use case scenario . If so, you need to use one of the existing IoT Agents that are part of IDAS.</p> <p>You need this component if you plan to connect IoT devices/gateways to FIWARE-based ecosystems. IoT Agents translate IoT-specific protocols into the NGSI context information protocol, that is the FIWARE standard data exchange model. You do not need this component if your devices or gateways natively support the NGSI API.</p> <p>FIWARE-Ready IoT devices are able demonstrate the ability of the IoT solutions to seamless interoperate with FIWARE platforms. Any IoT device which is able to connect to the context broker (either directly or via an IoT Agent) is able to undergo a certification and testing process and can be added to the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a> and labelled as a <a href='http://marketplace.fiware.org/pages/how-to-devices'>FIWARE-Ready IoT Device</a>.</p> <h4 id='whyuseiotagents'>Why Use IoT Agents?</h4> <p>By using an IoT Agent , your devices will be represented in a FIWARE platform as NGSI entities in a Context Broker. This means that you can query or subscribe to changes of device parameters status by querying or subscribing to the corresponding NGSI entity attributes at the ContextBroker.</p> <p>Additionally, you will be able trigger commands to your actuation devices by updating specific command-related attributes in the associated NGSI entities representation at the Context Broker. This way, all hardware interactions with IoT devices can be handled by the Context Broker, using a homogeneous <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface.</p>",  
        domain: "IoT Devices",  
        technology: "OPC-UA",
        status: "Full",
        gitHub: "https://github.com/Engineering-Research-and-Development/iotagent-opcua",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://hub.docker.com/r/iotagent4fiware/iotagent-opcua",
        quay: "https://quay.io/repository/fiware/iotagent-opcua",
        documentation: "https://iotagent-opcua.rtfd.io/",
        status: "Full",
    },
    { 
        name: "IoT Agent for AAS", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Robotics", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/robotics.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/iotagent-aas.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/iotagent-aas.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/iotagent-aas/latest.svg' alt='' /></p> <p>IoT Agent accepting data from OPC UA devices.</p> <p>An Internet of Things Agent accepting data from AAS devices. This IoT Agent is designed to be a bridge between the AAS (Asset Administration Shell) and the <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface of a context broker.</p> <p>The intended level of complexity to support these operations should consider a limited human intervention (mainly during the setup of a new AAS endpoint), through the mean of a parametrization task (either manual or semi-automatic, using a text-based parametrization or a simple UI to support the configuration) so that no software coding is required to adapt the agent to different AAS devices.</p> <h4 id='whatareiotagents'>What are IoT Agents?</h4> <p>The IoT Agent (IDAS) component is an implementation of the Backend Device Management GE, according to the FIWARE reference architecture. You are here because you need to connect objects to gather data or interact with them, typical IoT use case scenario . If so, you need to use one of the existing IoT Agents that are part of IDAS.</p> <p>You need this component if you plan to connect IoT devices/gateways to FIWARE-based ecosystems. IoT Agents translate IoT-specific protocols into the NGSI context information protocol, that is the FIWARE standard data exchange model. You do not need this component if your devices or gateways natively support the NGSI API.</p> <p>FIWARE-Ready IoT devices are able demonstrate the ability of the IoT solutions to seamless interoperate with FIWARE platforms. Any IoT device which is able to connect to the context broker (either directly or via an IoT Agent) is able to undergo a certification and testing process and can be added to the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a> and labelled as a <a href='http://marketplace.fiware.org/pages/how-to-devices'>FIWARE-Ready IoT Device</a>.</p> <h4 id='whyuseiotagents'>Why Use IoT Agents?</h4> <p>By using an IoT Agent , your devices will be represented in a FIWARE platform as NGSI entities in a Context Broker. This means that you can query or subscribe to changes of device parameters status by querying or subscribing to the corresponding NGSI entity attributes at the ContextBroker.</p> <p>Additionally, you will be able trigger commands to your actuation devices by updating specific command-related attributes in the associated NGSI entities representation at the Context Broker. This way, all hardware interactions with IoT devices can be handled by the Context Broker, using a homogeneous <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> interface.</p>",  
        domain: "IoT Devices",  
        technology: "AAS",
        status: "Incubating",
        gitHub: "https://github.com/Engineering-Research-and-Development/iotagent-aas",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://hub.docker.com/r/iotagent4fiware/iotagent-aas",
        quay: "https://quay.io/repository/fiware/iotagent-aas",
        documentation: "https://github.com/Engineering-Research-and-Development/iotagent-aas#aas-agent-the-fiware-iot-agent-for-aas",
        status: "Incubating",
    },
    { 
        name: "Web UI for IoT Agents", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Robotics", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/robotics.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/iotagent-ui.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/iotagent-ui.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/iotagent-ui/latest.svg' alt='' /></p> <p>The Angular-based web Single Page Application (SPA) that enables user-friendly interaction with FIWARE IoT Agents.</p> <p>The growing need of managing serveral IoT Agents installed at industrial plants led to the development of this asset which is a Web User Interface to monitor and control with ease what's happening under the hood. IoT Agent UI is fully compliant with FIWARE iotagent-node-lib thus every agent built on top of this library is supported out-of-the-box.</p>",  
        domain: "IoT Devices",  
        technology: "Angular",
        status: "Incubating",
        gitHub: "https://github.com/Engineering-Research-and-Development/iotagent-ui",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://hub.docker.com/r/iotagent4fiware/iotagent-ui-spa",
        quay: "https://quay.io/repository/fiware/iotagent-ui",
        documentation: "https://github.com/Engineering-Research-and-Development/iotagent-ui#iot-agent-ui-the-fiware-iot-agent-web-ui-for-iot-agents",
        status: "Incubating",
    },
    { 
        name: "Oliot", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "KAIST", 
        companyType: "", 
        type: "Third Party", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/02/svg/third-party.svg'/>",
        chapter: "interface", 
        content: "<p><img src='https://img.shields.io/github/license/yalewkidane/FIWARE_EPCIS_Mediation_Gateway.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/yalewkidane/FIWARE_EPCIS_Mediation_Gateway.svg' alt='' /> <img src='https://img.shields.io/github/tag/yalewkidane/FIWARE_EPCIS_Mediation_Gateway.svg' alt='' /></p> <h4 id='whatisoliot'>What is Oliot?</h4> <p>Oliot-MG is a mediation gateway which translates information from NGSI based IoT platform to EPCIS based IoT platform. This enables capturing state change in FIWARE context broker in the form of EPCIS Events.</p> <h4 id='whyuseoliot'>Why use Oliot?</h4> <p>To solve the issue of interoperability, multiple companies, organizations, and consortia have started to join and create standards. Currently, the two of the major standards that are widely being considered in the IoT sector are EPCIS and NGSI. Nevertheless, the two standards differ both in data encoding and service interface which create fragmentation from the point of view of data consumers application. Moreover, the two platforms differ in the underlying philosophy of representing and storing IoT data; namely, NGSI is entity-based and EPCIS is event-based. This creates an overhead to analyze and process data coming from the two platforms.</p> <p>FIWARE - EPCIS mediation gateway is developed to solve the interoperability between NGSI and EPCIS. It translates the entity based data from Orion context broker to EPCIS event. Moreover, enables traceability by capturing state change in FIWARE context broker in the form of EPCIS Event.</p>",  
        domain: "Event Processing",  
        technology: "EPCIS",
        status: "Incubating",
        gitHub: "https://github.com/yalewkidane/FIWARE_EPCIS_Mediation_Gateway",
        gitHubOrg: "https://github.com/yalewkidane",
        docker: "",
        quay: "",
        documentation: "https://fiware-epcis-gateway.readthedocs.io/",
        status: "Incubating",
    },
    { 
        name: "Wirecloud", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Visualisation", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/03/svg/visualisation.svg'/>",
        chapter: "context-processing", 
        content: "<p><img src='https://img.shields.io/badge/License-AGPLv3+%20with%20classpath--like%20exception-orange.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Wirecloud/wirecloud.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Wirecloud/wirecloud/latest.svg' alt='' /></p> <h4 id='whatiswirecloud'>What is Wirecloud</h4> <p>Wirecloud is a web mashup tool designed to ease the development of operational dashboards. This allows end users to easily create web applications and dashboards without programming skills and to visualize data of interest and control their environment.</p> <p>Web application mashups integrate heterogeneous data, application logic, and UI components (widgets) sourced from the Web to create new coherent and value-adding composite applications. They are targeted at leveraging the 'long tail' of the Web of Services (a.k.a. the Programmable Web) by exploiting rapid development, DIY, and shareability.</p> <p>Mashups typically serve a specific situational (i.e. immediate, bespoke, short-term) need, frequently with limited potential for reuse. Is this 'situational' character which precludes them to be offered as 'off-the-shelf' functionality by solution providers, and therefore creates the need for a tool like Wirecloud.</p> <h4 id='whyusewirecloud'>Why use Wirecloud</h4> <p>Web application mashups can be manually developed using conventional web programming technologies but this fails to take full advantage of the approach. Mashup tools and platforms like Wirecloud aim at development paradigms that do not require programming skills and, hence, target end users, being them citizens, knowledge workers, portal designers, etc.</p> <p>By using Wirecloud you have access to the following key features:</p> <ul> <li>Innovate through experimentation by choosing the best suited widgets, operators and prefab mashup-lets for your devised mashup from a vast, ever-growing distributed catalogue</li> <li>The wiring editor allows you to easily connect widgets in a mashup to create a full-fledged dashboard with RIA functionality</li> <li>The piping editor allows you to easily connect widgets to backend services or data sources through an extendable set of operators, including filters, aggregators, adapters, etc.</li> <li>Share your newly created mashup with other colleagues and users. Comment it, tag it and rate it to foster discoverability and shareability</li> <li>Help to build a strong community by commenting, tagging and rating others' widgets, operators and mashups. The platform will also do its best to complement your contribution</li> </ul>",  
        domain: "Dashboard",  
        technology: "OpenLayers,Google Map,Node.js",
        status: "Full",
        gitHub: "https://github.com/Wirecloud/wirecloud",
        gitHubOrg: "https://github.com/Ficodes",
        docker: "",
        quay: "https://quay.io/repository/fiware/wirecloud",
        documentation: "https://wirecloud.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Grafana", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "", 
        companyType: "", 
        type: "Visualisation", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-processing", 
        content: "",  
        domain: "Dashboard",  
        technology: "Grafana",
        status: "Non-Member",
        gitHub: "https://github.com/grafana/grafana",
        gitHubOrg: "https://github.com/grafana/grafana",
        docker: "",
        quay: "",
        documentation: "https://grafana.com/",
        status: "Non-Member",
    },
    { 
        name: "NGSI-LD Grafana Datasource Plugin", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "", 
        companyType: "", 
        type: "Visualisation", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-processing", 
        content: "",  
        domain: "NGSI-LD",  
        technology: "Grafana",
        status: "Non-Member",
        gitHub: "https://github.com/bfi-de/ngsild-grafana-datasource",
        gitHubOrg: "https://github.com/grafana/grafana",
        docker: "",
        quay: "",
        documentation: "https://github.com/bfi-de/ngsild-grafana-datasource#readme",
        status: "Non-Member",
    },
    { 
        name: "GIS Integrations", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "", 
        companyType: "", 
        type: "Visualisation", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-processing", 
        content: "",  
        domain: "Dashboard",  
        technology: "QGIS,ArcGIS,OpenLayers",
        status: "Non-Member",
        gitHub: "https://github.com/msgis/fiware-gis-quickstart",
        gitHubOrg: "https://github.com/grafana/grafana",
        docker: "",
        quay: "",
        documentation: "https://github.com/msgis/fiware-gis-quickstart#readme",
        status: "Non-Member",
    },
    { 
        name: "FogFlow", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "NEC", 
        companyType: "Corporation", 
        type: "Processing", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/03/svg/processing-analysis.svg'/>",
        chapter: "context-processing", 
        content: "<p><img src='https://img.shields.io/badge/license-BSD--4--clause-green' alt='License' /> <img src='https://img.shields.io/github/release-date/smartfog/fogflow.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/smartfog/fogflow/latest.svg' alt='' /></p> <h4 id='whatisfogflow'>What is FogFlow?</h4> <p>FogFlow is an IoT edge computing framework to orchestrate dynamic processing flows over cloud and edges. It can dynamically and automatically composite multiple NGSI-based data processing tasks to form high level IoT services, and then orchestrate and optimize the deployment of those services within a shared cloud-edge environment, with regards to the availability, locality, and mobility of IoT devices.</p> <h4 id='whyusefogflow'>Why use FogFlow?</h4> <p>The cost of a cloud-only solution is too high to run a large scale IoT system with &gt;1000 geo-distributed devices many IoT services require fast response time, such as &lt;10ms end-to-end latency service providers are facing huge complexity and cost to fast design and deploy their IoT services in a cloud-edge environment - business demands are changing fast over time and service providers need to try out and release any new services over their shared cloud-edge infrastructure at a fast speed lack of programming model to fast design and deploy IoT services over geo-distributed ICT infrastructure lack of interoperability and openness to share and reuse data and dervied results across various applications</p>",  
        domain: "Cloud-Edge",  
        technology: "",
        status: "Full",
        gitHub: "https://github.com/smartfog/fogflow",
        gitHubOrg: "https://github.com/smartfog",
        docker: "https://hub.docker.com/r/fogflow",
        quay: "",
        documentation: "https://fogflow.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Perseo Front-End", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Processing", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/03/svg/processing-analysis.svg'/>",
        chapter: "context-processing", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/perseo-fe.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/perseo-fe.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/perseo-fe/latest.svg' alt='' /></p> <h4 id='whatisperseo'>What is Perseo?</h4> <p>The Perseo Context-aware Complex Event Processing (Context-aware CEP) GE is a module that listens to events from context data (coming from Orion Context Broker or any other NGSI-compliant system or service) in real-time, and generates immediate insight, enabling thus instant response to changing conditions</p> <h4 id='whyuseperseo'>Why use Perseo?</h4> <p>Event processing in a Smart Solution enables you to listen to changes in the incoming context data and identify patterns in order to react by triggering external actions (e.g sending eMails or SMS messages)</p> <p>Perseo is an NSGI compliant rules-based query engine for event processing based on Esper CEP which means that rules can be defined using SQL-like queries in EPL eliminating the need to write code to hard-wire event conditions. Therefore Perseo can act as a bridge between the context data and other external systems.</p>",  
        domain: "Event Processing",  
        technology: "HTTP,eMail,SMS",
        status: "Incubating",
        gitHub: "https://github.com/telefonicaid/perseo-fe",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "",
        quay: "https://quay.io/repository/fiware/perseo-core",
        documentation: "https://fiware-perseo-fe.readthedocs.io/en/latest/",
        status: "Incubating",
    },
    { 
        name: "Perseo Back-End", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Processing", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/03/svg/processing-analysis.svg'/>",
        chapter: "context-processing", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/perseo-core.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/perseo-core.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/perseo-core/latest.svg' alt='' /></p> <h4 id='whatisperseo'>What is Perseo?</h4> <p>The Perseo Context-aware Complex Event Processing (Context-aware CEP) GE is a module that listens to events from context data (coming from Orion Context Broker or any other NGSI-compliant system or service) in real-time, and generates immediate insight, enabling thus instant response to changing conditions</p> <h4 id='whyuseperseo'>Why use Perseo?</h4> <p>Event processing in a Smart Solution enables you to listen to changes in the incoming context data and identify patterns in order to react by triggering external actions (e.g sending eMails or SMS messages)</p> <p>Perseo is an NSGI compliant rules-based query engine for event processing based on Esper CEP which means that rules can be defined using SQL-like queries in EPL eliminating the need to write code to hard-wire event conditions. Therefore Perseo can act as a bridge between the context data and other external systems.</p>",  
        domain: "Event Processing",  
        technology: "HTTP,eMail,SMS",
        status: "Incubating",
        gitHub: "https://github.com/telefonicaid/perseo-core",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "",
        quay: "https://quay.io/repository/fiware/perseo",
        documentation: "https://fiware-perseo-fe.readthedocs.io/en/latest/",
        status: "Incubating",
    },
    { 
        name: "Keyrock", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "UPM", 
        companyType: "", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/ging/fiware-idm.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-idm.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-idm/latest.svg' alt='' /></p> <h4 id='whatiskeyrock'>What is Keyrock?</h4> <p>Identity Management covers a number of aspects involving users' access to networks, services and applications, including secure and private authentication from users to devices, networks and services, authorization &amp; trust management, user profile management, privacy-preserving disposition of personal data, Single Sign-On (SSO) to service domains and Identity Federation towards applications. The Identity Manager is the central component that provides a bridge between IdM systems at connectivity-level and application-level. Furthermore, Identity Management is used for authorising foreign services to access personal data stored in a secure environment. Hereby usually the owner of the data must give consent to access the data; the consent-giving procedure also implies certain user authentication.</p> <h4 id='whyusekeyrock'>Why use Keyrock?</h4> <p>Identity Management is key on any architecture. IdM offers tools for administrators to support the handling of user lifecycle functions. It reduces the effort for account creation and management, as it supports the enforcement of policies and procedures for user registration, user profile management and the modification of user accounts. Administrators can quickly configure customized pages for the inclusion of different authentication providers, registration of tenant applications with access to user profile data and the handling of error notifications.</p> <p>For end users, the IdM provides a convenient solution for registering with applications since it gives them a means to re-use attributes like address, email or others, thus allowing an easy and convenient management of profile information. Users and administrators can rely on standardized solutions to allow user self-service features. In addition to providing a native login, IdM supports the integration of multiple 3rd party authentication providers. Foremost, it supports in a first step the configuration of preferred identity providers through the administrators. The use of 3rd party IdMs lowers the entry barriers for a native user to register, since the user can link to her/his preferred IdM and use this account for authentication. As it is possible to configure several applications that shall be linked to his IdM, the main benefit for users is a single sign-on (SSO) to all these applications. The IdM offers hosted user profile storage with specific user profile attributes. Applications do not have to run and manage their own persistent user data storages, but instead, can use the IdM user profile storage as a Software as a Service (SaaS) offering.</p> <p>The Keyrock Identity Manager complies with existing standards for user authentication and it provides access information to services acting as a Single Sign-On platform. The KeyRock IdM is a free/open source software which code can be found at Github: Keyrock source code It can be integrated with any development, specially with any Cloud service. The installation guide can be found at the Github's wiki page: Keyrock installation guide and Keyrock User and Programmers guide</p>",  
        domain: "Identity Manager,PDP",  
        technology: "Keyrock",
        status: "Non-Member",
        gitHub: "https://github.com/ging/fiware-idm",
        gitHubOrg: "https://github.com/ging",
        docker: "",
        quay: "https://quay.io/repository/fiware/idm",
        documentation: "https://fiware-idm.readthedocs.io/en/latest/",
        status: "Non-Member",
    },
    { 
        name: "Keycloak", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "", 
        companyType: "", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-data", 
        content: "",  
        domain: "Identity Manager,PDP",  
        technology: "Keycloak",
        status: "Non-Member",
        gitHub: "https://github.com/keycloak/keycloak",
        gitHubOrg: "https://github.com/keycloak",
        docker: "",
        quay: "",
        documentation: "https://github.com/keycloak/keycloak#readme",
        status: "Non-Member",
    },
    { 
        name: "Keystone", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "", 
        companyType: "", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-data", 
        content: "",  
        domain: "Identity Manager",  
        technology: "Keystone",
        status: "Non-Member",
        gitHub: "https://github.com/openstack/keystone",
        gitHubOrg: "https://github.com/openstack",
        docker: "",
        quay: "",
        documentation: "https://github.com/openstack/keystone#readme",
        status: "Non-Member",
    },
    { 
        name: "Wilma", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "UPM", 
        companyType: "", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/open-source-other/svg/open-source-other.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/ging/fiware-pep-proxy.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-pep-proxy.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-pep-proxy/latest.svg' alt='' /></p> <h4 id='whatiswilma'>What is Wilma?</h4> <p>You get the reference implementation of PEP Proxy Generic Enabler. Thanks to this component and together with Identity Management and Authorization PDP GEs, you will add authentication and authorization security to your backend applications. Thus, only FIWARE users will be able to access your GEs or REST services. But you will be able also to manage specific permissions and policies to your resources allowing different access levels to your users.</p> <h4 id='whyusewilma'>Why use Wilma?</h4> <p>Wilma is the reference implementation of this Generic Enabler because it is completely integrated with the FIWARE ecosystem and specifically with FIWARE account. It is thought to work with OAuth2 and XACML protocols, the standards for authentication and authorization chosen in FIWARE. Furthermore, this is the component that every GEis are including on top of their REST APIs so it is tested and used in many different scenarios.</p>",  
        domain: "PEP Proxy",  
        technology: "Keyrock",
        status: "Non-Member",
        gitHub: "https://github.com/ging/fiware-pep-proxy",
        gitHubOrg: "https://github.com/ging",
        docker: "",
        quay: "https://quay.io/repository/fiware/pep-proxy",
        documentation: "https://fiware-pep-proxy.rtfd.io/",
        status: "Non-Member",
    },
    { 
        name: "TRUE Connector", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/fiware-true-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/fiware-true-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/fiware-true-connector/latest.svg' alt='' /></p> <h4 id='whatisthefiwaretrueconnector'>What is the FIWARE TRUE Connector?</h4> <p>FIWARE TRUE Connector is a connector for the <a href='https://internationaldataspaces.org/'>International Data Spaces</a> (IDS) ecosystem. FIWARE TRUE Connector enables trusted data exchange in order to be active part of an IDS Ecosystem, a virtual data space leveraging existing standards and technologies, as well as governance models well-accepted in the data economy, to facilitate secure and standardized data exchange and data linkage in a trusted business ecosystem. The connector is compliant with the latest IDS specifications and can be easily customized to fit a wide spread of scenarios thanks to the internal separation of Execution Core Container and Data App.</p> <p>It is integrable with a lot of existing IDS services and totally configurable in terms of internal/external data format (multipart/mixed, multipart/form, http-header) and protocols (HTTP, HTTPS, Web Socket over HTTPS, IDSCPv2).</p> <h4 id='whyusethefiwaretrueconnector'>Why use the FIWARE TRUE Connector?</h4> <p>Trusted data exchange underpins data sovereignty, and allows users to pass context data between systems whilst limiting the degree to which third-parties are able to use and receive the data.</p> <p>IDSA envisages trusted data exchange taking place through federated entities, that are globally compliant with the certification requirements defined by IDSA itself. The use of the connector allows data providers and consumers to join these federated networks, or data spaces.</p>",  
        domain: "Data Exchange",  
        technology: "IDS",
        status: "Incubating",
        gitHub: "https://github.com/Engineering-Research-and-Development/fiware-true-connector",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://github.com/Engineering-Research-and-Development/fiware-true-connector/blob/master/docs/docker_readme.md",
        quay: "",
        documentation: "https://fiware-true-connector.readthedocs.io/",
        status: "Incubating",
    },
    { 
        name: "Steelskin", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-pep-steelskin.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/fiware-pep-steelskin.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/fiware-pep-steelskin/latest.svg' alt='' /></p> <h4 id='whatissteelskinpep'>What is Steelskin PEP?</h4> <p>Steelskin is a proxy meant to secure independent microservices such as FIWARE components, by intercepting every request sent to the componen and validating it against an Access Control component. This validation is based in several pieces of data:</p> <ul> <li><code>User token</code>: comes from the OAuth authorization server and is taken from the x-auth-token header.</li> <li><code>ServiceId</code>: is read from the fiware-service header and identifies the protected component.</li> <li><code>SubserviceId</code>: is read from the fiware-servicepath header and identifies further divisions of the service.</li> <li><code>Action</code>: the PEP guess the action for a particular request by checking the path or inspecting the body. The logic for performing such actions depends on the component that is being secured, so the PEP will need a plugin for each of this components.</li> </ul> <h4 id='whyusesteelskinpep'>Why use Steelskin PEP?</h4> <p>A PEP Proxy lies in front of a secured resource and is an endpoint found at 'well-known' public location. It serves as a gatekeeper for resource access. Users or other actors must supply sufficient information to the PEP Proxy to allow their request to succeed and pass through the PEP proxy. The PEP proxy then passes the request on to the real location of the secured resource itself.</p>",  
        domain: "PEP Proxy",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/telefonicaid/fiware-pep-steelskin",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "https://hub.docker.com/r/telefonicaiot/fiware-pep-steelskin",
        quay: "https://quay.io/repository/fiware/pep-steelskin",
        documentation: "https://github.com/telefonicaid/fiware-pep-steelskin#readme",
        status: "Incubating",
    },
    { 
        name: "Keypass", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-keypass.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/fiware-keypass.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/fiware-keypass/latest.svg' alt='' /></p> <h4 id='whatiskeypass'>What is Keypass?</h4> <p>Keypass is multi-tenant XACML server with PAP (Policy Administration Point) and PDP (Policy Decision Point) capabilities.</p> <h4 id='whyusekeypass'>Why use Keypass?</h4> <p>The PDP is an adjudicator which checks whether the headers and other information found within the request permit the user access to a resource or resources. XACML is a common standard for defining the rules of access and allowing modification on the fly. The PAP allows users to set up roles, permissions etc. which underpin the ruleset of the PDP creating a flexible security framework which can be applied to any microservice.</p>",  
        domain: "PDP",  
        technology: "XACML",
        status: "Incubating",
        gitHub: "https://github.com/telefonicaid/fiware-keypass",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "https://hub.docker.com/r/telefonicaiot/fiware-keypass",
        quay: "https://quay.io/repository/fiware/keypass",
        documentation: "https://github.com/telefonicaid/fiware-keypass#readme",
        status: "Incubating",
    },
    { 
        name: "Keystone SCIM", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-keystone-scim.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/telefonicaid/fiware-keystone-scim' alt='' /> <img src='https://img.shields.io/github/tag/telefonicaid/fiware-keystone-scim.svg' alt='' /></p> <h4 id='whatiskeystonescim'>What is Keystone SCIM?</h4> <p>Keystone SCIM is an OpenStack Keystone extension that enables the management of User, Groups and Roles using SCIM v1.1 standard. As any Keystone extension, it's designed to be installed on top of an existing Keystone installation, following Keystone recommendations for extensions.</p> <h4 id='whyusekeystonescim'>Why use Keystone SCIM?</h4> <p>The SCIM standard is a standard for automating the exchange of user identity information between identity domains, or IT systems. The extension enables the usage of this standard to define users, goups and roles. It can be installed onto a running Keystone installation and enhance the functionality of it.</p>",  
        domain: "",  
        technology: "Keystone",
        status: "Incubating",
        gitHub: "https://github.com/telefonicaid/fiware-keystone-scim",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "",
        quay: "",
        documentation: "https://github.com/telefonicaid/fiware-keystone-scim#readme",
        status: "Incubating",
    },
    { 
        name: "Keystone SPASSWORD", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Telefónica", 
        companyType: "S.A.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-keystone-spassword.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/telefonicaid/fiware-keystone-spassword' alt='' /> <img src='https://img.shields.io/github/tag/telefonicaid/fiware-keystone-spassword.svg' alt='' /></p> <h4 id='whatiskeystonespassword'>What is Keystone SPASSWORD?</h4> <p>Keystone SPASSWORD is an OpenStack Keystone extension that enables some extra security checks over user passwords, such as ensuring the usage of strong passwords, expiration time for a password, number of bad login attempts before user account became temporarily blocked, a recover procedure password, a second factor authentication (2FA) and so on.</p> <h4 id='whyusekeystonespassword'>Why use Keystone SPASSWORD?</h4> <p>Additional security checks and features improve the security and usability of a system, SPASSWORD helps to reduce development time by avoiding the need to implement and test bespoke secure system functions.</p>",  
        domain: "",  
        technology: "Keystone",
        status: "Incubating",
        gitHub: "https://github.com/telefonicaid/fiware-keystone-spassword",
        gitHubOrg: "https://github.com/telefonicaid/",
        docker: "https://hub.docker.com/r/telefonicaiot/fiware-keystone-spassword",
        quay: "https://quay.io/repository/fiware/keystone-spassword",
        documentation: "https://github.com/telefonicaid/fiware-keystone-spassword#readme",
        status: "Incubating",
    },
    { 
        name: "Trusted Issuers List Service", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/trusted-issuers-list.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/trusted-issuers-list' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/trusted-issuers-list.svg' alt='' /></p> <h4 id='whatisthetrustedissuerslistservice'>What is the Trusted Issuers List Service ?</h4> <p>The Trusted-Issuers-List Service provides an EBSI Trusted Issuers Registry implementation to act as the Trusted-List-Service in the DSBA Trust and IAM Framework. In addition, a Trusted Issuers List API to manage the issuers is provided. </p> <h4 id='whyusedthetrustedissuerslistservice'>Why used the Trusted Issuers List Service ?</h4> <p>In an DSBA-compliant framework, the Verifier has to check for incoming <a href='https://www.w3.org/TR/vc-data-model/'>Verifiable Credentials</a> that the corresponding issuer is allowed to issue:</p> <ul> <li>the given type of credential</li> <li>with the given claims</li> <li>and at the current time</li> </ul> <p>To do so, it requires a service that provides this information.</p>",  
        domain: "Data Spaces,Trust",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/trusted-issuers-list",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/trusted-issuers-list",
        documentation: "https://github.com/FIWARE/trusted-issuers-list#readme",
        status: "Incubating",
    },
    { 
        name: "DSBA PDP", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/dsba-pdp.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/dsba-pdp' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/dsba-pdp.svg' alt='' /></p> <h4 id='whatisthedsbapdp'>What is the DSBA PDP  ?</h4> <p>Implementation of a Policy-Desicion Point, evaluating Json-Web-Tokens containing <a href='https://www.w3.org/TR/vc-data-model/'>Verifiable Credentials</a> in an DSBA-compliant way. It also supports the evaluation in the context of i4Trust. </p> <h4 id='whyusethedsbapdp'>Why use the DSBA PDP ?</h4> <p>A Policy Decision Point (PDP) is a mechanism that restricts access to resources by comparing them to a security policy. The permit/deny mechanism ensure than only authorised users are able to access a given resource. This PDP for data spaces uses  well-defined policy structures found within JWTs, where the policy structure follows the reccommendations made by the Data  Spaces Business Alliance ((DSBA)[https://data-spaces-business-alliance.eu/]) and therefore ensuring that multiple organisations are able to create policies in common across a data space.</p>",  
        domain: "PDP,Data Spaces",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/dsba-pdp",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/dsba-pdp",
        documentation: "https://github.com/FIWARE/dsba-pdp#readme",
        status: "Incubating",
    },
    { 
        name: "VC-Verifier", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/VCVerifier.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/VCVerifier' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/VCVerifier.svg' alt='' /></p> <h4 id='whatisvcverifier'>What is VCVerifier ?</h4> <p>VCVerifier provides the necessary endpoints(see API) to offer SIOP-2/OIDC4VP compliant authentication flows.  It exchanges <a href='https://www.w3.org/TR/vc-data-model/'>Verifiable Credentials</a> for a JSON Web Token (<a href='https://jwt.io/'>JWT</a>),  that can be used for authorization and authentication in down-stream components.</p> <h4 id='whyusevcverifier'>Why use VCVerifier ?</h4> <p>The JWT used for a Verifiable Credential is not the same JWT that can be used for authorization and authentication. The component reads in a Verifiable Credential and replaces it with an authorisation policy which can be used to permit  access to services.</p>",  
        domain: "Data Spaces,Trust",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/VCVerifier",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/vcverifier",
        documentation: "https://github.com/FIWARE/VCVerifier#readme",
        status: "Incubating",
    },
    { 
        name: "Keycloak VC-Issuer", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/keycloak-vc-issuer.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/keycloak-vc-issuer' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/keycloak-vc-issuer.svg' alt='' /></p> <h4 id='whatisthekeycloakvcissuer'>What is the Keycloak VC-Issuer ?</h4> <p>The Keycloak-VC-Issuer is plugin for <a href='https://www.keycloak.org/'>Keycloak</a> to support SIOP-2/ OIDC4VP clients and  issue <a href='https://www.w3.org/TR/vc-data-model/'>Verifiable Credentials</a> through the OIDC4VCI-Protocol to compliant wallets. </p> <h4 id='whyusethekeycloakvcissuer'>Why use the Keycloak VC-Issuer ?</h4> <p>Issuance of Verified credentials is an essential step in creating a common data space. Effectively creating a digital club card allowing a user to access various services. This plugin extends the existing Keycloak service so that Keycloak itself is able to issue a credential.</p>",  
        domain: "Verified Credentials",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/keycloak-vc-issuer",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/keycloak-vc-issuer",
        documentation: "https://github.com/FIWARE/keycloak-vc-issuer#readme",
        status: "Incubating",
    },
    { 
        name: "Credentials Config Service", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/credentials-config-service.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/credentials-config-service' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/credentials-config-service.svg' alt='' /></p> <h4 id='whatisthecredentialsconfigservice'>What is the Credentials Config Service ?</h4> <p>The Credentials Config Service manages and provides information about services and the credentials they are using. It returns  the scope to be requested from the wallet per service and the credentials and issuers that are considered to be trusted for a  certain service. </p> <h4 id='whyusethecredentialsconfigservice'>Why use the Credentials Config Service ?</h4> <p>In an DSBA-compliant framework, a Verifier is responsible to communicate with wallets and verify the credentials they provide. To get this done, it needs information about:</p> <ul> <li>the credentials to be requested from a wallet</li> <li>the credentials and claims an issuer is allowed to issue</li> </ul> <p>To do so, it requires a service that provides such information</p>",  
        domain: "Verified Credentials",  
        technology: "Keycloak",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/credentials-config-service",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/credentials-config-service",
        documentation: "https://github.com/FIWARE/credentials-config-service#readme",
        status: "Incubating",
    },
    { 
        name: "Trusted Issuers Registry", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/trusted-issuers-registry.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/trusted-issuers-registry' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/trusted-issuers-registry.svg' alt='' /></p> <h4 id='whatisthetrustedissuersregistry'>What is the Trusted Issuers Registry ?</h4> <p>The Trusted Issuers Registry provides both an EBSI Trusted Issuers Registry implementation and an iShare implementation.  The service provides data from an NGSI-LD compliant backend and configuration files.</p> <h4 id='whyusethetrustedissuersregistry'>Why use the Trusted Issuers Registry ?</h4> <p>A Trusted Issuers Registry (TIR) is a decentralised registry for storing information about trusted issuers, such as public information and accreditations. The TIR stores all information within a smart contract in the form of Verifiable Accreditations, which are issued by Trust Chain participants or self-issued. Issuers can then designate proxies for credential verification that can be used to assess the validity of the credential or check whether it has been revoked.</p>",  
        domain: "Data Spaces,Trust",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/trusted-issuers-registry",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/trusted-issuers-registry",
        documentation: "https://github.com/FIWARE/trusted-issuers-registry#readme",
        status: "Incubating",
    },
    { 
        name: "Anubis", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Martel Innovate", 
        companyType: "", 
        type: "Security", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/security.svg'/>",
        chapter: "context-data", 
        content: "",  
        domain: "PEP Proxy",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/orchestracities/anubis",
        gitHubOrg: "https://github.com/orchestracities/anubis",
        docker: "",
        quay: "https://quay.io/repository/fiware/anubis",
        documentation: "https://anubis-pep.readthedocs.io/en/latest/",
        status: "Incubating",
    },
    { 
        name: "CKAN extensions", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Data Publication", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/data-publication.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/conwetlab/FIWARE-CKAN-Extensions.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/conwetlab/FIWARE-CKAN-Extensions.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/conwetlab/FIWARE-CKAN-Extensions/latest.svg' alt='' /></p> <h4 id='whatisextensionstockan'>What is Extensions to CKAN?</h4> <p>A set of CKAN extensions, developed within FIWARE, which integrates this data portal platform with the main FIWARE GEs, enhancing the default CKAN behaviour with improved access control, publication of right-time context data, and rich visualization features.</p> <p>In particular, the following extensions are being provided:</p> <ul> <li>OAuth2: This extension enables the integration of CKAN with an external OAuth2 Identity Manager (e.g The FIWARE IdM)</li> <li>Private Datasets: This extension improves the default dataset permissions features provided by CKAN by enabling to create protected datasets which can be accessed by a set of users included in an access list</li> <li>NGSI View: This extension enables the publication of right-time context data as dataset resources by allowing to define them as NGSI v2 queries to a Context Broker</li> <li>BAE Publisher: This extension simplifies the monetization of private datasets by enabling the creation of products and offerings in the Business API Ecosystem GE directly using the dataset information</li> <li>WireCloud View: This extension allows to embed WireCloud (Application Mashup GEri) dashboards as dataset resources views, enabling the creation of rich and highly customizable visualizations for the published data</li> <li>Data Requests: This extension includes a new section in CKAN intended to allow users of the platform to ask for data which is not yet published</li> </ul> <h4 id='whyuseextensionstockan'>Why use Extensions to CKAN?</h4> <p>CKAN is one of the most extended Open Data publication platforms and is becoming the de-facto standard for data publication in Europe. Moreover, CKAN is an open source platform which means it can be easily adapted and expanded.</p> <p>In this regard, the provided extensions integrate CKAN with the FIWARE platform, enabling the right-time context information served by a context broker to be published as dataset resources, making it easier to be discovered and consumed.</p> <p>In addition, the integration of the FIWARE Security and Business Frameworks provide an enriched access control and enable explicit acceptance of data terms and conditions, usage accounting, or data monetization</p> <p>Finally, the integration with WireCloud lets the data providers create and customize rich visualizations for their data, without the need of installing new extensions or restarting the platform.</p>",  
        domain: "",  
        technology: "CKAN",
        status: "Full",
        gitHub: "https://github.com/conwetlab/FIWARE-CKAN-Extensions",
        gitHubOrg: "https://github.com/Ficodes",
        docker: "",
        quay: "https://quay.io/repository/fiware/ckan-extended",
        documentation: "https://fiware-ckan-extensions.rtfd.io/",
        status: "Full",
    },
    { 
        name: "Idra", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "Engineering", 
        companyType: "S.p.A.", 
        type: "Data Publication", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/data-publication.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/OPSILab/Idra.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/OPSILab/Idra.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/OPSILab/Idra/latest.svg' alt='' /></p> <h3 id='whatisidra'>What is Idra?</h3> <p>Idra is a web application able to federate existing Open Data Management Systems (ODMS) based on different technologies providing a unique access point to search and discover open datasets coming from heterogeneous sources. Idra uniforms representation of collected open datasets, thanks to the adoption of international standards (DCAT-AP) and provides a set of RESTful APIs to be used by third party applications.</p> <p>Idra supports natively ODMS based on <a href='https://ckan.org/'>CKAN</a>, <a href='https://getdkan.org/'>DKAN</a>, <a href='https://socrata.com/'>Socrata</a>, Orion Context Broker (<a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI v2</a>) and many other technologies: Idra provides also a set of APIs to federate ODMS not natively supported. In addition, it is possible to federate generic open data portals, that don't expose an API, using the web scraping functionality or providing a dump file of the datasets in <a href='https://joinup.ec.europa.eu/solution/dcat-application-profile-data-portals-europe'>DCAT-AP</a> format. Moreover Idra provides a <a href='https://www.w3.org/TR/sparql11-query/'>SPARQL</a> endpoint in order to perform queries on 5 stars RDF <a href='https://dvcs.w3.org/hg/gld/raw-file/default/glossary/index.html'>linked open data</a> collected from federated ODMS and allows to easily create charts based on federated open datasets.</p> <h3 id='whyuseidra'>Why use Idra?</h3> <p>One of the most relevant problems that limits to adoption and usage of open data is related to technology and standard fragmentation: every entity that wants to provide open data (e.g. Public Administration) uses different platforms and formats for their publication. This issue represents a barrier for the user that wants to search for open data, and for third-party applications that are not able to simply access and reuse it. Idra is an open source platform that provides a unique access point to open datasets coming from heterogeneous ODMS (Open Data Management System), such as portals provided by Municipalities and PAs.</p> <p>The adoption and usage of Idra can have direct benefits for different stakeholders:</p> <h4 id='benefitsforthepublicadministrations'>Benefits for the Public Administrations:</h4> <ul> <li>Standardise open data exposing it through open API and standard models (DCAT_AP) compliant with European guidelines. The API could be harvested by other open data federation portals (e.g. European Data portal)</li> <li>Provide to the citizen, with minimum effort, new functionalities not existent in their native portals (e.g. SPARQL queries, graphical visualisation of datasets etc)</li> <li>Improve visibility because their data are part of a federation potentially accessible by a larger number of users</li> </ul> <h4 id='benefitsforthecitizens'>Benefits for the citizens</h4> <ul> <li>Use a single access point for the open data of different entities avoiding problems related to find and use heterogeneous open data portals</li> <li>Access to advanced search and visualisation functionalities not existent in the original portals</li> </ul> <h4 id='benefitsforcompanies'>Benefits for companies</h4> <ul> <li>Access to a large number of open datasets in a unique and standard way together with data visualisation and analytics functionalities for different scopes (e.g. Statistics, sector-specific data research, data reuse to build innovative and added-value application)</li> </ul>",  
        domain: "",  
        technology: "CKAN,DKAN,SOCRATA",
        status: "Full",
        gitHub: "https://github.com/OPSILab/Idra",
        gitHubOrg: "https://github.com/Engineering-Research-and-Development",
        docker: "https://hub.docker.com/r/idraopendata/idra",
        quay: "https://quay.io/repository/fiware/idra",
        documentation: "https://idra.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "BAE Framework APIs", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Data Monetization", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/data-monetization.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE-TMForum/Business-API-Ecosystem.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE-TMForum/Business-API-Ecosystem.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE-TMForum/Business-API-Ecosystem/latest.svg' alt='' /></p> <h4 id='whatisthebusinessapiecosystem'>What is the Business API Ecosystem?</h4> <p>The Business API Ecosystem GE is the result of the collaboration between FIWARE and the TMForum. In this regard, the Business API Ecosystem GE is a joint component made up by integrating the FIWARE Business Framework with a set of standard APIs (and its reference implementations) provided by the TMForum in its TMF API ecosystem.</p> <p>This component allows the monetization of different kind of assets (both digital and physical) during the whole service life cycle, from offering creation to its charging, accounting and revenue settlement and sharing. In this way, the Business API Ecosystem provides sellers the means for managing, publishing, and generating revenue of they products, apps, data, and services.</p> <p>By using the Business API Ecosystem you have access to the following key features:</p> <ul> <li>Support for the management of catalogs, products, and offering</li> <li>Support for rich pricing models, including recurring payments, pay-per-use, etc.</li> <li>Support for accounting callbacks</li> <li>Support for billing and charging</li> <li>Integrated support for PayPal, including customer charges and seller payments</li> <li>Support for revenue sharing, including models with multiple stakeholders involved</li> </ul> <p>The Business API Ecosystem exposes its complete functionality through TMForum standard APIs; concretely, it includes the catalog management, ordering management, inventory management, usage management, billing, customer, and party APIs.</p> <h4 id='whyusethebusinessapiecosystem'>Why use the Business API Ecosystem?</h4> <p>In those fields where it is expected to create a real ecosystem of apps, data, and services (such as Smart Cities), offering third parties a way to enrich existing services and data, and enable monetization, is a key factor. In this regard, the integrated support for pricing (including pay-per-use modalities), accounting, charging, billing and revenue sharing offered by the Business API Ecosystem can position it one step ahead of the current market.</p> <p>Additionally, the TMForum APIs are design to enable repeatable and flexible integration among operations and management systems, making it easier to create, build and operate complex innovative services. The Business API Ecosystem exposes its functionality using the standard TMForum APIs; therefore, it takes advantage of the benefits on operation and management offered by such standards, allowing companies that plan to offer data and apps in such ecosystem to not adapt their systems ad-hoc.</p> <p>Business API Ecosystem Open <a href='https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FIWARE.OpenSpecification.Apps.BusinessAPIEcosystem'>Specification</a></p> <p>Biz Ecosystem RI is an implementation of the FIWARE/TMForum Business API Ecosystem Generic Enabler. More specifically, the Biz Ecosystem RI implements the following APIs and Open Specifications:</p> <ul> <li><a href='https://fiware-tmforum.github.io/Business-API-Ecosystem/'>Open API Specification</a></li> </ul>",  
        domain: "",  
        technology: "TMForum",
        status: "Full",
        gitHub: "https://github.com/FIWARE-TMForum/Business-API-Ecosystem",
        gitHubOrg: "https://github.com/FIWARE-TMForum/Business-API-Ecosystem",
        docker: "",
        quay: "https://quay.io/repository/fiware/biz-ecosystem-apis",
        documentation: "https://business-api-ecosystem.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "BAE Charging Backend", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Data Monetization", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/data-monetization.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE-TMForum/business-ecosystem-logic-proxy.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE-TMForum//business-ecosystem-logic-proxy.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE-TMForum/business-ecosystem-logic-proxy/latest.svg' alt='' /></p> <h4 id='whatisthebusinessapiecosystem'>What is the Business API Ecosystem?</h4> <p>The Business API Ecosystem GE is the result of the collaboration between FIWARE and the TMForum. In this regard, the Business API Ecosystem GE is a joint component made up by integrating the FIWARE Business Framework with a set of standard APIs (and its reference implementations) provided by the TMForum in its TMF API ecosystem.</p> <p>This component allows the monetization of different kind of assets (both digital and physical) during the whole service life cycle, from offering creation to its charging, accounting and revenue settlement and sharing. In this way, the Business API Ecosystem provides sellers the means for managing, publishing, and generating revenue of they products, apps, data, and services.</p> <p>By using the Business API Ecosystem you have access to the following key features:</p> <ul> <li>Support for the management of catalogs, products, and offering</li> <li>Support for rich pricing models, including recurring payments, pay-per-use, etc.</li> <li>Support for accounting callbacks</li> <li>Support for billing and charging</li> <li>Integrated support for PayPal, including customer charges and seller payments</li> <li>Support for revenue sharing, including models with multiple stakeholders involved</li> </ul> <p>The Business API Ecosystem exposes its complete functionality through TMForum standard APIs; concretely, it includes the catalog management, ordering management, inventory management, usage management, billing, customer, and party APIs.</p> <h4 id='whyusethebusinessapiecosystem'>Why use the Business API Ecosystem?</h4> <p>In those fields where it is expected to create a real ecosystem of apps, data, and services (such as Smart Cities), offering third parties a way to enrich existing services and data, and enable monetization, is a key factor. In this regard, the integrated support for pricing (including pay-per-use modalities), accounting, charging, billing and revenue sharing offered by the Business API Ecosystem can position it one step ahead of the current market.</p> <p>Additionally, the TMForum APIs are design to enable repeatable and flexible integration among operations and management systems, making it easier to create, build and operate complex innovative services. The Business API Ecosystem exposes its functionality using the standard TMForum APIs; therefore, it takes advantage of the benefits on operation and management offered by such standards, allowing companies that plan to offer data and apps in such ecosystem to not adapt their systems ad-hoc.</p> <p>Business API Ecosystem Open <a href='https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FIWARE.OpenSpecification.Apps.BusinessAPIEcosystem'>Specification</a></p> <p>Biz Ecosystem RI is an implementation of the FIWARE/TMForum Business API Ecosystem Generic Enabler. More specifically, the Biz Ecosystem RI implements the following APIs and Open Specifications:</p> <ul> <li><a href='https://fiware-tmforum.github.io/Business-API-Ecosystem/'>Open API Specification</a></li> </ul>",  
        domain: "",  
        technology: "TMForum",
        status: "Full",
        gitHub: "https://github.com/FIWARE-TMForum/business-ecosystem-charging-backend",
        gitHubOrg: "https://github.com/FIWARE-TMForum/business-ecosystem-charging-backend",
        docker: "",
        quay: "https://quay.io/repository/fiware/biz-ecosystem-charging-backend",
        documentation: "https://business-api-ecosystem.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "BAE Logic Proxy", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Data Monetization", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/data-monetization.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE-TMForum/business-ecosystem-logic-proxy.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE-TMForum/business-ecosystem-logic-proxy.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE-TMForum/business-ecosystem-logic-proxy/latest.svg' alt='' /></p> <h4 id='whatisthebusinessapiecosystem'>What is the Business API Ecosystem?</h4> <p>The Business API Ecosystem GE is the result of the collaboration between FIWARE and the TMForum. In this regard, the Business API Ecosystem GE is a joint component made up by integrating the FIWARE Business Framework with a set of standard APIs (and its reference implementations) provided by the TMForum in its TMF API ecosystem.</p> <p>This component allows the monetization of different kind of assets (both digital and physical) during the whole service life cycle, from offering creation to its charging, accounting and revenue settlement and sharing. In this way, the Business API Ecosystem provides sellers the means for managing, publishing, and generating revenue of they products, apps, data, and services.</p> <p>By using the Business API Ecosystem you have access to the following key features:</p> <ul> <li>Support for the management of catalogs, products, and offering</li> <li>Support for rich pricing models, including recurring payments, pay-per-use, etc.</li> <li>Support for accounting callbacks</li> <li>Support for billing and charging</li> <li>Integrated support for PayPal, including customer charges and seller payments</li> <li>Support for revenue sharing, including models with multiple stakeholders involved</li> </ul> <p>The Business API Ecosystem exposes its complete functionality through TMForum standard APIs; concretely, it includes the catalog management, ordering management, inventory management, usage management, billing, customer, and party APIs.</p> <h4 id='whyusethebusinessapiecosystem'>Why use the Business API Ecosystem?</h4> <p>In those fields where it is expected to create a real ecosystem of apps, data, and services (such as Smart Cities), offering third parties a way to enrich existing services and data, and enable monetization, is a key factor. In this regard, the integrated support for pricing (including pay-per-use modalities), accounting, charging, billing and revenue sharing offered by the Business API Ecosystem can position it one step ahead of the current market.</p> <p>Additionally, the TMForum APIs are design to enable repeatable and flexible integration among operations and management systems, making it easier to create, build and operate complex innovative services. The Business API Ecosystem exposes its functionality using the standard TMForum APIs; therefore, it takes advantage of the benefits on operation and management offered by such standards, allowing companies that plan to offer data and apps in such ecosystem to not adapt their systems ad-hoc.</p> <p>Business API Ecosystem Open <a href='https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FIWARE.OpenSpecification.Apps.BusinessAPIEcosystem'>Specification</a></p> <p>Biz Ecosystem RI is an implementation of the FIWARE/TMForum Business API Ecosystem Generic Enabler. More specifically, the Biz Ecosystem RI implements the following APIs and Open Specifications:</p> <ul> <li><a href='https://fiware-tmforum.github.io/Business-API-Ecosystem/'>Open API Specification</a></li> </ul>",  
        domain: "",  
        technology: "TMForum",
        status: "Full",
        gitHub: "https://github.com/FIWARE-TMForum/business-ecosystem-logic-proxy",
        gitHubOrg: "https://github.com/FIWARE-TMForum/business-ecosystem-logic-proxy",
        docker: "",
        quay: "https://quay.io/repository/fiware/biz-ecosystem-logic-proxy",
        documentation: "https://business-api-ecosystem.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "BAE Revenue Sharing", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FICODES", 
        companyType: "", 
        type: "Data Monetization", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/data-monetization.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE-TMForum/business-ecosystem-rss.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE-TMForum/business-ecosystem-rss.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE-TMForumbusiness-ecosystem-rss/latest.svg' alt='' /></p> <h4 id='whatisthebusinessapiecosystem'>What is the Business API Ecosystem?</h4> <p>The Business API Ecosystem GE is the result of the collaboration between FIWARE and the TMForum. In this regard, the Business API Ecosystem GE is a joint component made up by integrating the FIWARE Business Framework with a set of standard APIs (and its reference implementations) provided by the TMForum in its TMF API ecosystem.</p> <p>This component allows the monetization of different kind of assets (both digital and physical) during the whole service life cycle, from offering creation to its charging, accounting and revenue settlement and sharing. In this way, the Business API Ecosystem provides sellers the means for managing, publishing, and generating revenue of they products, apps, data, and services.</p> <p>By using the Business API Ecosystem you have access to the following key features:</p> <ul> <li>Support for the management of catalogs, products, and offering</li> <li>Support for rich pricing models, including recurring payments, pay-per-use, etc.</li> <li>Support for accounting callbacks</li> <li>Support for billing and charging</li> <li>Integrated support for PayPal, including customer charges and seller payments</li> <li>Support for revenue sharing, including models with multiple stakeholders involved</li> </ul> <p>The Business API Ecosystem exposes its complete functionality through TMForum standard APIs; concretely, it includes the catalog management, ordering management, inventory management, usage management, billing, customer, and party APIs.</p> <h4 id='whyusethebusinessapiecosystem'>Why use the Business API Ecosystem?</h4> <p>In those fields where it is expected to create a real ecosystem of apps, data, and services (such as Smart Cities), offering third parties a way to enrich existing services and data, and enable monetization, is a key factor. In this regard, the integrated support for pricing (including pay-per-use modalities), accounting, charging, billing and revenue sharing offered by the Business API Ecosystem can position it one step ahead of the current market.</p> <p>Additionally, the TMForum APIs are design to enable repeatable and flexible integration among operations and management systems, making it easier to create, build and operate complex innovative services. The Business API Ecosystem exposes its functionality using the standard TMForum APIs; therefore, it takes advantage of the benefits on operation and management offered by such standards, allowing companies that plan to offer data and apps in such ecosystem to not adapt their systems ad-hoc.</p> <p>Business API Ecosystem Open <a href='https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FIWARE.OpenSpecification.Apps.BusinessAPIEcosystem'>Specification</a></p> <p>Biz Ecosystem RI is an implementation of the FIWARE/TMForum Business API Ecosystem Generic Enabler. More specifically, the Biz Ecosystem RI implements the following APIs and Open Specifications:</p> <ul> <li><a href='https://fiware-tmforum.github.io/Business-API-Ecosystem/'>Open API Specification</a></li> </ul>",  
        domain: "",  
        technology: "TMForum",
        status: "Full",
        gitHub: "https://github.com/FIWARE-TMForum/business-ecosystem-rss",
        gitHubOrg: "https://github.com/FIWARE-TMForum/business-ecosystem-rss",
        docker: "",
        quay: "https://quay.io/repository/fiware/biz-ecosystem-rss",
        documentation: "https://business-api-ecosystem.readthedocs.io/",
        status: "Full",
    },
    { 
        name: "CoatRack", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "ATB Bremen", 
        companyType: "", 
        type: "API Management", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/api-management.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/coatrack/coatrack.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/coatrack/coatrack.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/coatrack/coatrack/latest.svg' alt='' /></p> <h4 id='whatiscoatrack'>What is CoatRack?</h4> <p>CoatRack is a framework of managed backend-to-backend communication via REST services, consisting of distributed, lightweight API gateways and a centralized web application to generate and administer those API gateways.</p> <p>CoatRack can facilitate your work if you have existing REST APIs and you want to do one (or more) of the following:</p> <ul> <li>monitoring the access to your APIs,</li> <li>authentication/authorization of calls to your APIs via API keys,</li> <li>monetization of API calls, based on pay-per-call rules or flat rate monetization.</li> </ul> <h4 id='whyusecoatrack'>Why use CoatRack?</h4> <p>If your use case includes management of backend-to-backend communication via REST APIs, for example when offering backend services to third parties, some common boilerplate work is required in addition to developing the actual service API.</p> <p>Coatrack reduces the overhead in implementing common tasks such as:</p> <ul> <li>mechanisms for authentication/authorisation,</li> <li>providing access credentials to the users,</li> <li>monitoring calls to the API,</li> <li>generating statistics.</li> </ul> <p>This allows development teams to concentrate on building and maintaining the features of their own API as a product, without spending time on ancillary features.</p>",  
        domain: "",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/coatrack/coatrack",
        gitHubOrg: "https://github.com/coatrack/",
        docker: "https://hub.docker.com/r/coatrack/admin/",
        quay: "",
        documentation: "https://github.com/coatrack/coatrack/wiki",
        status: "Incubating",
    },
    { 
        name: "Endpoint-Auth-Service", 
        img: "https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png",
        company: "FIWARE Foundation", 
        companyType: "e.V.", 
        type: "API Management", 
        badge: "<img src='https://www.fiware.org/custom/brand-guide/img/badges/catalogue/04/svg/api-management.svg'/>",
        chapter: "context-data", 
        content: "<p><img src='https://img.shields.io/github/license/FIWARE/endpoint-auth-service.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE/endpoint-auth-service.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE/endpoint-auth-service/latest.svg' alt='' /></p> <h5 id='whatisendpointauthservice'>What is Endpoint-Auth-Service?</h5> <p>In various use-cases, there is a need to apply authentication or authorization to outgoing requests for components that  do not handle this themselves - for example notifications in NGSI-LD brokers. This service provides that by adding an  envoy-proxy as sidecar to the component that gets forwarded all outgoing requests via ip-tables. The sidecar-proxy does request auth-information from the auth-provider and adds it to the requests accordingly. The endpoints to be handled and  there auth-information can be configured through endpoint-configuration-service.</p> <h5 id='whyusetheendpointauthservice'>Why use the Endpoint-Auth-Service?</h5> <p>Within data spaces, outgoing requests will need to be annotated as legitimate traffic coming from a specific trusted participant from within the data space. The Endpoint-Auth-Service does this work automatically and the architecture allows separation of the actual authentication flows from the proxy itself, thus giving more flexibility in terms of technology and reduces the complexity of the code inside the proxy.</p>",  
        domain: "",  
        technology: "",
        status: "Incubating",
        gitHub: "https://github.com/FIWARE/endpoint-auth-service",
        gitHubOrg: "https://github.com/FIWARE/",
        docker: "",
        quay: "https://quay.io/repository/fiware/endpoint-configuration-service",
        documentation: "https://github.com/FIWARE/endpoint-auth-service#readme",
        status: "Incubating",
    },
];